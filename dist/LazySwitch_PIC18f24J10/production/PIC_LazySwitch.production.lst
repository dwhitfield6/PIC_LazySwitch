

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Aug 25 18:52:44 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F24J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    41                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    44  0000                     
    45                           	psect	idataCOMRAM
    46  0007D8                     __pidataCOMRAM:
    47                           	opt stack 0
    48                           
    49                           ;initializer for _ButtonTimer
    50  0007D8  01                 	db	1
    51                           
    52                           ;initializer for _ButtonValue_prev
    53  0007D9  01                 	db	1
    54                           
    55                           	psect	smallconst
    56  000400                     __psmallconst:
    57                           	opt stack 0
    58  000400  00                 	db	0
    59  000401                     _PCB_Version:
    60                           	opt stack 0
    61  000401  50                 	db	80
    62  000402  43                 	db	67
    63  000403  42                 	db	66
    64  000404  20                 	db	32
    65  000405  72                 	db	114
    66  000406  65                 	db	101
    67  000407  76                 	db	118
    68  000408  41                 	db	65
    69  000409  00                 	db	0
    70  00040A                     __end_of_PCB_Version:
    71                           	opt stack 0
    72  00040A  00                 	db	0
    73  00040B  80                 	db	128
    74  00040C  3F                 	db	63
    75  00040D  72                 	db	114
    76  00040E  31                 	db	49
    77  00040F  3F                 	db	63
    78  000410  FE                 	db	254
    79  000411  75                 	db	117
    80  000412  3E                 	db	62
    81  000413  58                 	db	88
    82  000414  63                 	db	99
    83  000415  3D                 	db	61
    84  000416  95                 	db	149
    85  000417  1D                 	db	29
    86  000418  3C                 	db	60
    87  000419  C5                 	db	197
    88  00041A  AE                 	db	174
    89  00041B  3A                 	db	58
    90  00041C  79                 	db	121
    91  00041D  21                 	db	33
    92  00041E  39                 	db	57
    93  00041F  94                 	db	148
    94  000420  80                 	db	128
    95  000421  37                 	db	55
    96  000422  93                 	db	147
    97  000423  A7                 	db	167
    98  000424  35                 	db	53
    99  000425  56                 	db	86
   100  000426  15                 	db	21
   101  000427  34                 	db	52
   102  000428                     __end_ofexp@coeff:
   103                           	opt stack 0
   104  000428  00                 	db	0
   105  000429  00                 	db	0
   106  00042A  00                 	db	0
   107  00042B  00                 	db	0
   108  00042C  80                 	db	128
   109  00042D  3F                 	db	63
   110  00042E  F0                 	db	240
   111  00042F  FF                 	db	255
   112  000430  BE                 	db	190
   113  000431  E2                 	db	226
   114  000432  A9                 	db	169
   115  000433  3E                 	db	62
   116  000434  83                 	db	131
   117  000435  76                 	db	118
   118  000436  BE                 	db	190
   119  000437  AE                 	db	174
   120  000438  2B                 	db	43
   121  000439  3E                 	db	62
   122  00043A  3C                 	db	60
   123  00043B  C3                 	db	195
   124  00043C  BD                 	db	189
   125  00043D  D2                 	db	210
   126  00043E  13                 	db	19
   127  00043F  3D                 	db	61
   128  000440  78                 	db	120
   129  000441  D3                 	db	211
   130  000442  BB                 	db	187
   131  000443                     __end_oflog@coeff:
   132                           	opt stack 0
   133  0000                     _ADCON1bits	set	4033
   134  0000                     _INTCON2bits	set	4081
   135  0000                     _INTCONbits	set	4082
   136  0000                     _IPR1bits	set	3999
   137  0000                     _LATA	set	3977
   138  0000                     _LATB	set	3978
   139  0000                     _LATC	set	3979
   140  0000                     _PIE1bits	set	3997
   141  0000                     _PIR1bits	set	3998
   142  0000                     _PORTB	set	3969
   143  0000                     _PR2	set	4043
   144  0000                     _RCONbits	set	4048
   145  0000                     _T2CONbits	set	4042
   146  0000                     _TMR2	set	4044
   147  0000                     _TRISAbits	set	3986
   148  0000                     _TRISBbits	set	3987
   149  0000                     _TRISCbits	set	3988
   150                           
   151                           ; #config settings
   152  000443  00                 	db	0	; dummy byte at the end
   153  0000                     
   154                           	psect	cinit
   155  000616                     __pcinit:
   156                           	opt stack 0
   157  000616                     start_initialization:
   158                           	opt stack 0
   159  000616                     __initialization:
   160                           	opt stack 0
   161                           
   162                           ; Clear objects allocated to COMRAM (12 bytes)
   163  000616  EE00  F038         	lfsr	0,__pbssCOMRAM
   164  00061A  0E0C               	movlw	12
   165  00061C                     clear_0:
   166  00061C  6AEE               	clrf	postinc0,c
   167  00061E  06E8               	decf	wreg,f,c
   168  000620  E1FD               	bnz	clear_0
   169                           
   170                           ; Initialize objects allocated to COMRAM (2 bytes)
   171                           ; load TBLPTR registers with __pidataCOMRAM
   172  000622  0ED8               	movlw	low __pidataCOMRAM
   173  000624  6EF6               	movwf	tblptrl,c
   174  000626  0E07               	movlw	high __pidataCOMRAM
   175  000628  6EF7               	movwf	tblptrh,c
   176  00062A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   177  00062C  6EF8               	movwf	tblptru,c
   178  00062E  0009               	tblrd		*+	;fetch initializer
   179  000630  CFF5 F044          	movff	tablat,__pdataCOMRAM
   180  000634  0009               	tblrd		*+	;fetch initializer
   181  000636  CFF5 F045          	movff	tablat,__pdataCOMRAM+1
   182  00063A                     end_of_initialization:
   183                           	opt stack 0
   184  00063A                     __end_of__initialization:
   185                           	opt stack 0
   186  00063A  0E00               	movlw	low (__Lsmallconst shr (0+16))
   187  00063C  6EF8               	movwf	tblptru,c
   188  00063E  0E04               	movlw	high __Lsmallconst
   189  000640  6EF7               	movwf	tblptrh,c
   190  000642  0100               	movlb	0
   191  000644  EFA9  F002         	goto	_main	;jump to C main() function
   192                           tblptru	equ	0xFF8
   193                           tblptrh	equ	0xFF7
   194                           tblptrl	equ	0xFF6
   195                           tablat	equ	0xFF5
   196                           postinc0	equ	0xFEE
   197                           wreg	equ	0xFE8
   198                           
   199                           	psect	bssCOMRAM
   200  000038                     __pbssCOMRAM:
   201                           	opt stack 0
   202  000038                     _Timer2Post:
   203                           	opt stack 0
   204  000038                     	ds	2
   205  00003A                     _Timer2PostCount:
   206                           	opt stack 0
   207  00003A                     	ds	2
   208  00003C                     _errno:
   209                           	opt stack 0
   210  00003C                     	ds	2
   211  00003E                     _ButtonChange:
   212                           	opt stack 0
   213  00003E                     	ds	1
   214  00003F                     _Button_Data:
   215                           	opt stack 0
   216  00003F                     	ds	1
   217  000040                     _DC_Motor:
   218                           	opt stack 0
   219  000040                     	ds	1
   220  000041                     _IR_Data:
   221                           	opt stack 0
   222  000041                     	ds	1
   223  000042                     _RF_Data:
   224                           	opt stack 0
   225  000042                     	ds	1
   226  000043                     _Timer2Use:
   227                           	opt stack 0
   228  000043                     	ds	1
   229                           tblptru	equ	0xFF8
   230                           tblptrh	equ	0xFF7
   231                           tblptrl	equ	0xFF6
   232                           tablat	equ	0xFF5
   233                           postinc0	equ	0xFEE
   234                           wreg	equ	0xFE8
   235                           
   236                           	psect	dataCOMRAM
   237  000044                     __pdataCOMRAM:
   238                           	opt stack 0
   239  000044                     _ButtonTimer:
   240                           	opt stack 0
   241  000044                     	ds	1
   242  000045                     _ButtonValue_prev:
   243                           	opt stack 0
   244  000045                     	ds	1
   245                           tblptru	equ	0xFF8
   246                           tblptrh	equ	0xFF7
   247                           tblptrl	equ	0xFF6
   248                           tablat	equ	0xFF5
   249                           postinc0	equ	0xFEE
   250                           wreg	equ	0xFE8
   251                           
   252                           	psect	cstackCOMRAM
   253  000001                     __pcstackCOMRAM:
   254                           	opt stack 0
   255  000001                     IR_ReadReceiver@value:
   256                           	opt stack 0
   257  000001                     TMR_Timer2@state:
   258                           	opt stack 0
   259  000001                     i1BUT_ReadButton@value:
   260                           	opt stack 0
   261                           
   262                           ; 1 bytes @ 0x0
   263  000001                     	ds	1
   264  000002                     TMR_ResetTimer2@TimerOn:
   265                           	opt stack 0
   266                           
   267                           ; 1 bytes @ 0x1
   268  000002                     	ds	1
   269  000003                     TMR_Timer2Start@time:
   270                           	opt stack 0
   271                           
   272                           ; 2 bytes @ 0x2
   273  000003                     	ds	2
   274  000005                     ??_low_isr:
   275                           
   276                           ; 0 bytes @ 0x4
   277  000005                     	ds	17
   278  000016                     low_isr@button_state:
   279                           	opt stack 0
   280                           
   281                           ; 1 bytes @ 0x15
   282  000016                     	ds	1
   283  000017                     ??_high_isr:
   284                           
   285                           ; 0 bytes @ 0x16
   286  000017                     	ds	14
   287  000025                     MTR_IN1@state:
   288                           	opt stack 0
   289  000025                     MTR_IN2@state:
   290                           	opt stack 0
   291  000025                     BUT_IR_PinChangeInt@state:
   292                           	opt stack 0
   293  000025                     BUT_ReadButton@value:
   294                           	opt stack 0
   295  000025                     TMR_Timer2Int@state:
   296                           	opt stack 0
   297  000025                     MSC_DelayNOP@NOPs:
   298                           	opt stack 0
   299                           
   300                           ; 2 bytes @ 0x24
   301  000025                     	ds	1
   302  000026                     
   303                           ; 0 bytes @ 0x25
   304  000026                     	ds	1
   305  000027                     MSC_DelayNOP@i:
   306                           	opt stack 0
   307                           
   308                           ; 2 bytes @ 0x26
   309  000027                     	ds	2
   310  000029                     MSC_DelayMS@US:
   311                           	opt stack 0
   312                           
   313                           ; 4 bytes @ 0x28
   314  000029                     	ds	4
   315  00002D                     ??_MSC_DelayMS:
   316                           
   317                           ; 0 bytes @ 0x2C
   318  00002D                     	ds	1
   319  00002E                     MSC_DelayMS@i:
   320                           	opt stack 0
   321                           
   322                           ; 4 bytes @ 0x2D
   323  00002E                     	ds	4
   324  000032                     MSC_BlinkLED@blink:
   325                           	opt stack 0
   326                           
   327                           ; 2 bytes @ 0x31
   328  000032                     	ds	2
   329  000034                     ??_MSC_BlinkLED:
   330                           
   331                           ; 0 bytes @ 0x33
   332  000034                     	ds	2
   333  000036                     MSC_BlinkLED@i:
   334                           	opt stack 0
   335                           
   336                           ; 2 bytes @ 0x35
   337  000036                     	ds	2
   338  000038                     tblptru	equ	0xFF8
   339                           tblptrh	equ	0xFF7
   340                           tblptrl	equ	0xFF6
   341                           tablat	equ	0xFF5
   342                           postinc0	equ	0xFEE
   343                           wreg	equ	0xFE8
   344                           
   345                           ; 0 bytes @ 0x37
   346 ;;
   347 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   348 ;;
   349 ;; *************** function _main *****************
   350 ;; Defined at:
   351 ;;		line 62 in file "main.c"
   352 ;; Parameters:    Size  Location     Type
   353 ;;		None
   354 ;; Auto vars:     Size  Location     Type
   355 ;;		None
   356 ;; Return value:  Size  Location     Type
   357 ;;                  2   22[None  ] int 
   358 ;; Registers used:
   359 ;;		wreg, status,2, status,0, cstack
   360 ;; Tracked objects:
   361 ;;		On entry : 0/0
   362 ;;		On exit  : 0/0
   363 ;;		Unchanged: 0/0
   364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   365 ;;      Params:         0       0       0       0       0
   366 ;;      Locals:         0       0       0       0       0
   367 ;;      Temps:          0       0       0       0       0
   368 ;;      Totals:         0       0       0       0       0
   369 ;;Total ram usage:        0 bytes
   370 ;; Hardware stack levels required when called:    9
   371 ;; This function calls:
   372 ;;		_Init_App
   373 ;;		_Init_System
   374 ;;		_MSC_BlinkLED
   375 ;;		_MTR_Rotate
   376 ;;		_SYS_ConfigureOscillator
   377 ;; This function is called by:
   378 ;;		Startup code after reset
   379 ;; This function uses a non-reentrant model
   380 ;;
   381                           
   382                           	psect	text0
   383  000552                     __ptext0:
   384                           	opt stack 0
   385  000552                     _main:
   386                           	opt stack 22
   387                           
   388                           ;main.c: 65: SYS_ConfigureOscillator();
   389                           
   390                           ;incstack = 0
   391  000552  ECE8  F003         	call	_SYS_ConfigureOscillator	;wreg free
   392                           
   393                           ;main.c: 66: Init_App();
   394  000556  ECED  F002         	call	_Init_App	;wreg free
   395                           
   396                           ;main.c: 67: Init_System();
   397  00055A  EC24  F003         	call	_Init_System	;wreg free
   398                           
   399                           ;main.c: 69: MSC_BlinkLED(15);
   400  00055E  0E00               	movlw	0
   401  000560  6E33               	movwf	MSC_BlinkLED@blink+1,c
   402  000562  0E0F               	movlw	15
   403  000564  6E32               	movwf	MSC_BlinkLED@blink,c
   404  000566  ECCB  F002         	call	_MSC_BlinkLED	;wreg free
   405                           
   406                           ;main.c: 70: (LATC &= ~0x10);
   407  00056A  988B               	bcf	3979,4,c	;volatile
   408  00056C  D000               	goto	l2480
   409  00056E                     l2480:
   410                           
   411                           ;main.c: 73: {
   412                           ;main.c: 74: if(RF_Data || IR_Data || Button_Data)
   413  00056E  5042               	movf	_RF_Data,w,c
   414  000570  A4D8               	btfss	status,2,c
   415  000572  D006               	goto	l2486
   416  000574  5041               	movf	_IR_Data,w,c
   417  000576  A4D8               	btfss	status,2,c
   418  000578  D003               	goto	l2486
   419  00057A  503F               	movf	_Button_Data,w,c
   420  00057C  B4D8               	btfsc	status,2,c
   421  00057E  D7F7               	goto	l2480
   422  000580                     l2486:
   423                           
   424                           ;main.c: 75: {
   425                           ;main.c: 76: MTR_Rotate();
   426  000580  EC55  F002         	call	_MTR_Rotate	;wreg free
   427                           
   428                           ;main.c: 77: RF_Data = 0;
   429  000584  0E00               	movlw	0
   430  000586  6E42               	movwf	_RF_Data,c
   431                           
   432                           ;main.c: 78: IR_Data = 0;
   433  000588  0E00               	movlw	0
   434  00058A  6E41               	movwf	_IR_Data,c
   435                           
   436                           ;main.c: 79: Button_Data = 0;
   437  00058C  0E00               	movlw	0
   438  00058E  6E3F               	movwf	_Button_Data,c
   439  000590  D7EE               	goto	l2480
   440  000592  EF96  F000         	goto	start
   441  000596                     __end_of_main:
   442                           	opt stack 0
   443                           tblptru	equ	0xFF8
   444                           tblptrh	equ	0xFF7
   445                           tblptrl	equ	0xFF6
   446                           tablat	equ	0xFF5
   447                           postinc0	equ	0xFEE
   448                           wreg	equ	0xFE8
   449                           status	equ	0xFD8
   450                           
   451 ;; *************** function _SYS_ConfigureOscillator *****************
   452 ;; Defined at:
   453 ;;		line 48 in file "SYSTEM.c"
   454 ;; Parameters:    Size  Location     Type
   455 ;;		None
   456 ;; Auto vars:     Size  Location     Type
   457 ;;		None
   458 ;; Return value:  Size  Location     Type
   459 ;;		None               void
   460 ;; Registers used:
   461 ;;		None
   462 ;; Tracked objects:
   463 ;;		On entry : 0/0
   464 ;;		On exit  : 0/0
   465 ;;		Unchanged: 0/0
   466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   467 ;;      Params:         0       0       0       0       0
   468 ;;      Locals:         0       0       0       0       0
   469 ;;      Temps:          0       0       0       0       0
   470 ;;      Totals:         0       0       0       0       0
   471 ;;Total ram usage:        0 bytes
   472 ;; Hardware stack levels used:    1
   473 ;; Hardware stack levels required when called:    5
   474 ;; This function calls:
   475 ;;		Nothing
   476 ;; This function is called by:
   477 ;;		_main
   478 ;; This function uses a non-reentrant model
   479 ;;
   480                           
   481                           	psect	text1
   482  0007D0                     __ptext1:
   483                           	opt stack 0
   484  0007D0                     _SYS_ConfigureOscillator:
   485                           	opt stack 25
   486                           
   487                           ;SYSTEM.c: 51: __nop();
   488                           
   489                           ;incstack = 0
   490  0007D0  F000               	nop	
   491  0007D2  0012               	return		;funcret
   492  0007D4                     __end_of_SYS_ConfigureOscillator:
   493                           	opt stack 0
   494                           tblptru	equ	0xFF8
   495                           tblptrh	equ	0xFF7
   496                           tblptrl	equ	0xFF6
   497                           tablat	equ	0xFF5
   498                           postinc0	equ	0xFEE
   499                           wreg	equ	0xFE8
   500                           status	equ	0xFD8
   501                           
   502 ;; *************** function _MTR_Rotate *****************
   503 ;; Defined at:
   504 ;;		line 104 in file "MOTOR.c"
   505 ;; Parameters:    Size  Location     Type
   506 ;;		None
   507 ;; Auto vars:     Size  Location     Type
   508 ;;		None
   509 ;; Return value:  Size  Location     Type
   510 ;;		None               void
   511 ;; Registers used:
   512 ;;		wreg, status,2, status,0, cstack
   513 ;; Tracked objects:
   514 ;;		On entry : 0/0
   515 ;;		On exit  : 0/0
   516 ;;		Unchanged: 0/0
   517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   518 ;;      Params:         0       0       0       0       0
   519 ;;      Locals:         0       0       0       0       0
   520 ;;      Temps:          0       0       0       0       0
   521 ;;      Totals:         0       0       0       0       0
   522 ;;Total ram usage:        0 bytes
   523 ;; Hardware stack levels used:    1
   524 ;; Hardware stack levels required when called:    7
   525 ;; This function calls:
   526 ;;		_MSC_DelayMS
   527 ;;		_MTR_IN1
   528 ;;		_MTR_IN2
   529 ;; This function is called by:
   530 ;;		_main
   531 ;; This function uses a non-reentrant model
   532 ;;
   533                           
   534                           	psect	text2
   535  0004AA                     __ptext2:
   536                           	opt stack 0
   537  0004AA                     _MTR_Rotate:
   538                           	opt stack 23
   539                           
   540                           ;MOTOR.c: 106: if(DC_Motor == 0)
   541                           
   542                           ;incstack = 0
   543  0004AA  5040               	movf	_DC_Motor,w,c
   544  0004AC  A4D8               	btfss	status,2,c
   545  0004AE  D012               	goto	l2458
   546                           
   547                           ;MOTOR.c: 107: {
   548                           ;MOTOR.c: 108: MTR_IN1(0);
   549  0004B0  0E00               	movlw	0
   550  0004B2  ECB0  F003         	call	_MTR_IN1
   551                           
   552                           ;MOTOR.c: 109: MTR_IN2(1);
   553  0004B6  0E01               	movlw	1
   554  0004B8  ECA7  F003         	call	_MTR_IN2
   555                           
   556                           ;MOTOR.c: 110: MSC_DelayMS(100);
   557  0004BC  0E64               	movlw	100
   558  0004BE  6E29               	movwf	MSC_DelayMS@US,c
   559  0004C0  0E00               	movlw	0
   560  0004C2  6E2A               	movwf	MSC_DelayMS@US+1,c
   561  0004C4  0E00               	movlw	0
   562  0004C6  6E2B               	movwf	MSC_DelayMS@US+2,c
   563  0004C8  0E00               	movlw	0
   564  0004CA  6E2C               	movwf	MSC_DelayMS@US+3,c
   565  0004CC  EC84  F002         	call	_MSC_DelayMS	;wreg free
   566                           
   567                           ;MOTOR.c: 111: DC_Motor = 1;
   568  0004D0  0E01               	movlw	1
   569  0004D2  D011               	goto	L1
   570  0004D4                     l2458:
   571                           
   572                           ;MOTOR.c: 113: else
   573                           ;MOTOR.c: 114: {
   574                           ;MOTOR.c: 115: MTR_IN1(1);
   575  0004D4  0E01               	movlw	1
   576  0004D6  ECB0  F003         	call	_MTR_IN1
   577                           
   578                           ;MOTOR.c: 116: MTR_IN2(0);
   579  0004DA  0E00               	movlw	0
   580  0004DC  ECA7  F003         	call	_MTR_IN2
   581                           
   582                           ;MOTOR.c: 117: MSC_DelayMS(100);
   583  0004E0  0E64               	movlw	100
   584  0004E2  6E29               	movwf	MSC_DelayMS@US,c
   585  0004E4  0E00               	movlw	0
   586  0004E6  6E2A               	movwf	MSC_DelayMS@US+1,c
   587  0004E8  0E00               	movlw	0
   588  0004EA  6E2B               	movwf	MSC_DelayMS@US+2,c
   589  0004EC  0E00               	movlw	0
   590  0004EE  6E2C               	movwf	MSC_DelayMS@US+3,c
   591  0004F0  EC84  F002         	call	_MSC_DelayMS	;wreg free
   592                           
   593                           ;MOTOR.c: 118: DC_Motor = 0;
   594  0004F4  0E00               	movlw	0
   595  0004F6                     L1:
   596  0004F6  6E40               	movwf	_DC_Motor,c
   597  0004F8  D000               	goto	l2462
   598  0004FA                     l2462:
   599                           
   600                           ;MOTOR.c: 119: }
   601                           ;MOTOR.c: 120: MTR_IN1(0);
   602  0004FA  0E00               	movlw	0
   603  0004FC  ECB0  F003         	call	_MTR_IN1
   604                           
   605                           ;MOTOR.c: 121: MTR_IN2(0);
   606  000500  0E00               	movlw	0
   607  000502  ECA7  F003         	call	_MTR_IN2
   608  000506  0012               	return		;funcret
   609  000508                     __end_of_MTR_Rotate:
   610                           	opt stack 0
   611                           tblptru	equ	0xFF8
   612                           tblptrh	equ	0xFF7
   613                           tblptrl	equ	0xFF6
   614                           tablat	equ	0xFF5
   615                           postinc0	equ	0xFEE
   616                           wreg	equ	0xFE8
   617                           status	equ	0xFD8
   618                           
   619 ;; *************** function _MTR_IN2 *****************
   620 ;; Defined at:
   621 ;;		line 71 in file "MOTOR.c"
   622 ;; Parameters:    Size  Location     Type
   623 ;;  state           1    wreg     unsigned char 
   624 ;; Auto vars:     Size  Location     Type
   625 ;;  state           1   36[COMRAM] unsigned char 
   626 ;; Return value:  Size  Location     Type
   627 ;;		None               void
   628 ;; Registers used:
   629 ;;		wreg, status,2, status,0
   630 ;; Tracked objects:
   631 ;;		On entry : 0/0
   632 ;;		On exit  : 0/0
   633 ;;		Unchanged: 0/0
   634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   635 ;;      Params:         0       0       0       0       0
   636 ;;      Locals:         1       0       0       0       0
   637 ;;      Temps:          0       0       0       0       0
   638 ;;      Totals:         1       0       0       0       0
   639 ;;Total ram usage:        1 bytes
   640 ;; Hardware stack levels used:    1
   641 ;; Hardware stack levels required when called:    5
   642 ;; This function calls:
   643 ;;		Nothing
   644 ;; This function is called by:
   645 ;;		_MTR_Rotate
   646 ;; This function uses a non-reentrant model
   647 ;;
   648                           
   649                           	psect	text3
   650  00074E                     __ptext3:
   651                           	opt stack 0
   652  00074E                     _MTR_IN2:
   653                           	opt stack 24
   654                           
   655                           ;incstack = 0
   656                           ;MTR_IN2@state stored from wreg
   657  00074E  6E25               	movwf	MTR_IN2@state,c
   658                           
   659                           ;MOTOR.c: 73: if(state)
   660  000750  5025               	movf	MTR_IN2@state,w,c
   661  000752  B4D8               	btfsc	status,2,c
   662  000754  D002               	goto	l1352
   663                           
   664                           ;MOTOR.c: 74: {
   665                           ;MOTOR.c: 75: LATC |= 0x04;
   666  000756  848B               	bsf	3979,2,c	;volatile
   667                           
   668                           ;MOTOR.c: 76: }
   669  000758  0012               	return	
   670  00075A                     l1352:
   671                           
   672                           ;MOTOR.c: 77: else
   673                           ;MOTOR.c: 78: {
   674                           ;MOTOR.c: 79: LATC &= ~0x04;
   675  00075A  948B               	bcf	3979,2,c	;volatile
   676  00075C  0012               	return	
   677  00075E  0012               	return		;funcret
   678  000760                     __end_of_MTR_IN2:
   679                           	opt stack 0
   680                           tblptru	equ	0xFF8
   681                           tblptrh	equ	0xFF7
   682                           tblptrl	equ	0xFF6
   683                           tablat	equ	0xFF5
   684                           postinc0	equ	0xFEE
   685                           wreg	equ	0xFE8
   686                           status	equ	0xFD8
   687                           
   688 ;; *************** function _MTR_IN1 *****************
   689 ;; Defined at:
   690 ;;		line 54 in file "MOTOR.c"
   691 ;; Parameters:    Size  Location     Type
   692 ;;  state           1    wreg     unsigned char 
   693 ;; Auto vars:     Size  Location     Type
   694 ;;  state           1   36[COMRAM] unsigned char 
   695 ;; Return value:  Size  Location     Type
   696 ;;		None               void
   697 ;; Registers used:
   698 ;;		wreg, status,2, status,0
   699 ;; Tracked objects:
   700 ;;		On entry : 0/0
   701 ;;		On exit  : 0/0
   702 ;;		Unchanged: 0/0
   703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   704 ;;      Params:         0       0       0       0       0
   705 ;;      Locals:         1       0       0       0       0
   706 ;;      Temps:          0       0       0       0       0
   707 ;;      Totals:         1       0       0       0       0
   708 ;;Total ram usage:        1 bytes
   709 ;; Hardware stack levels used:    1
   710 ;; Hardware stack levels required when called:    5
   711 ;; This function calls:
   712 ;;		Nothing
   713 ;; This function is called by:
   714 ;;		_MTR_Rotate
   715 ;; This function uses a non-reentrant model
   716 ;;
   717                           
   718                           	psect	text4
   719  000760                     __ptext4:
   720                           	opt stack 0
   721  000760                     _MTR_IN1:
   722                           	opt stack 24
   723                           
   724                           ;incstack = 0
   725                           ;MTR_IN1@state stored from wreg
   726  000760  6E25               	movwf	MTR_IN1@state,c
   727                           
   728                           ;MOTOR.c: 56: if(state)
   729  000762  5025               	movf	MTR_IN1@state,w,c
   730  000764  B4D8               	btfsc	status,2,c
   731  000766  D002               	goto	l1346
   732                           
   733                           ;MOTOR.c: 57: {
   734                           ;MOTOR.c: 58: LATB |= 0x08;
   735  000768  868A               	bsf	3978,3,c	;volatile
   736                           
   737                           ;MOTOR.c: 59: }
   738  00076A  0012               	return	
   739  00076C                     l1346:
   740                           
   741                           ;MOTOR.c: 60: else
   742                           ;MOTOR.c: 61: {
   743                           ;MOTOR.c: 62: LATB &= ~0x08;
   744  00076C  968A               	bcf	3978,3,c	;volatile
   745  00076E  0012               	return	
   746  000770  0012               	return		;funcret
   747  000772                     __end_of_MTR_IN1:
   748                           	opt stack 0
   749                           tblptru	equ	0xFF8
   750                           tblptrh	equ	0xFF7
   751                           tblptrl	equ	0xFF6
   752                           tablat	equ	0xFF5
   753                           postinc0	equ	0xFEE
   754                           wreg	equ	0xFE8
   755                           status	equ	0xFD8
   756                           
   757 ;; *************** function _MSC_BlinkLED *****************
   758 ;; Defined at:
   759 ;;		line 1112 in file "MISC.c"
   760 ;; Parameters:    Size  Location     Type
   761 ;;  blink           2   49[COMRAM] unsigned int 
   762 ;; Auto vars:     Size  Location     Type
   763 ;;  i               2   53[COMRAM] unsigned int 
   764 ;; Return value:  Size  Location     Type
   765 ;;		None               void
   766 ;; Registers used:
   767 ;;		wreg, status,2, status,0, cstack
   768 ;; Tracked objects:
   769 ;;		On entry : 0/0
   770 ;;		On exit  : 0/0
   771 ;;		Unchanged: 0/0
   772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   773 ;;      Params:         2       0       0       0       0
   774 ;;      Locals:         2       0       0       0       0
   775 ;;      Temps:          2       0       0       0       0
   776 ;;      Totals:         6       0       0       0       0
   777 ;;Total ram usage:        6 bytes
   778 ;; Hardware stack levels used:    1
   779 ;; Hardware stack levels required when called:    7
   780 ;; This function calls:
   781 ;;		_MSC_DelayMS
   782 ;; This function is called by:
   783 ;;		_main
   784 ;; This function uses a non-reentrant model
   785 ;;
   786                           
   787                           	psect	text5
   788  000596                     __ptext5:
   789                           	opt stack 0
   790  000596                     _MSC_BlinkLED:
   791                           	opt stack 23
   792                           
   793                           ;MISC.c: 1114: unsigned int i;
   794                           ;MISC.c: 1116: for(i=0;i<(blink<<1);i++)
   795                           
   796                           ;incstack = 0
   797  000596  0E00               	movlw	0
   798  000598  6E37               	movwf	MSC_BlinkLED@i+1,c
   799  00059A  0E00               	movlw	0
   800  00059C  6E36               	movwf	MSC_BlinkLED@i,c
   801  00059E  D00F               	goto	l2450
   802  0005A0                     l2444:
   803                           
   804                           ;MISC.c: 1117: {
   805                           ;MISC.c: 1118: MSC_DelayMS(50);
   806  0005A0  0E32               	movlw	50
   807  0005A2  6E29               	movwf	MSC_DelayMS@US,c
   808  0005A4  0E00               	movlw	0
   809  0005A6  6E2A               	movwf	MSC_DelayMS@US+1,c
   810  0005A8  0E00               	movlw	0
   811  0005AA  6E2B               	movwf	MSC_DelayMS@US+2,c
   812  0005AC  0E00               	movlw	0
   813  0005AE  6E2C               	movwf	MSC_DelayMS@US+3,c
   814  0005B0  EC84  F002         	call	_MSC_DelayMS	;wreg free
   815                           
   816                           ;MISC.c: 1119: (LATC ^= 0x10);
   817  0005B4  0E10               	movlw	16
   818  0005B6  1A8B               	xorwf	3979,f,c	;volatile
   819  0005B8  4A36               	infsnz	MSC_BlinkLED@i,f,c
   820  0005BA  2A37               	incf	MSC_BlinkLED@i+1,f,c
   821  0005BC  D000               	goto	l2450
   822  0005BE                     l2450:
   823  0005BE  C032  F034         	movff	MSC_BlinkLED@blink,??_MSC_BlinkLED
   824  0005C2  C033  F035         	movff	MSC_BlinkLED@blink+1,??_MSC_BlinkLED+1
   825  0005C6  90D8               	bcf	status,0,c
   826  0005C8  3634               	rlcf	??_MSC_BlinkLED,f,c
   827  0005CA  3635               	rlcf	??_MSC_BlinkLED+1,f,c
   828  0005CC  5034               	movf	??_MSC_BlinkLED,w,c
   829  0005CE  5C36               	subwf	MSC_BlinkLED@i,w,c
   830  0005D0  5035               	movf	??_MSC_BlinkLED+1,w,c
   831  0005D2  5837               	subwfb	MSC_BlinkLED@i+1,w,c
   832  0005D4  A0D8               	btfss	status,0,c
   833  0005D6  D7E4               	goto	l2444
   834  0005D8  0012               	return		;funcret
   835  0005DA                     __end_of_MSC_BlinkLED:
   836                           	opt stack 0
   837                           tblptru	equ	0xFF8
   838                           tblptrh	equ	0xFF7
   839                           tblptrl	equ	0xFF6
   840                           tablat	equ	0xFF5
   841                           postinc0	equ	0xFEE
   842                           wreg	equ	0xFE8
   843                           status	equ	0xFD8
   844                           
   845 ;; *************** function _MSC_DelayMS *****************
   846 ;; Defined at:
   847 ;;		line 47 in file "MISC.c"
   848 ;; Parameters:    Size  Location     Type
   849 ;;  US              4   40[COMRAM] long 
   850 ;; Auto vars:     Size  Location     Type
   851 ;;  i               4   45[COMRAM] long 
   852 ;; Return value:  Size  Location     Type
   853 ;;		None               void
   854 ;; Registers used:
   855 ;;		wreg, status,2, status,0, cstack
   856 ;; Tracked objects:
   857 ;;		On entry : 0/0
   858 ;;		On exit  : 0/0
   859 ;;		Unchanged: 0/0
   860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   861 ;;      Params:         4       0       0       0       0
   862 ;;      Locals:         4       0       0       0       0
   863 ;;      Temps:          1       0       0       0       0
   864 ;;      Totals:         9       0       0       0       0
   865 ;;Total ram usage:        9 bytes
   866 ;; Hardware stack levels used:    1
   867 ;; Hardware stack levels required when called:    6
   868 ;; This function calls:
   869 ;;		_MSC_DelayNOP
   870 ;; This function is called by:
   871 ;;		_MTR_Rotate
   872 ;;		_MSC_BlinkLED
   873 ;; This function uses a non-reentrant model
   874 ;;
   875                           
   876                           	psect	text6
   877  000508                     __ptext6:
   878                           	opt stack 0
   879  000508                     _MSC_DelayMS:
   880                           	opt stack 23
   881                           
   882                           ;MISC.c: 49: long i;
   883                           ;MISC.c: 51: for(i=0; i<US; i++)
   884                           
   885                           ;incstack = 0
   886  000508  0E00               	movlw	0
   887  00050A  6E2E               	movwf	MSC_DelayMS@i,c
   888  00050C  0E00               	movlw	0
   889  00050E  6E2F               	movwf	MSC_DelayMS@i+1,c
   890  000510  0E00               	movlw	0
   891  000512  6E30               	movwf	MSC_DelayMS@i+2,c
   892  000514  0E00               	movlw	0
   893  000516  6E31               	movwf	MSC_DelayMS@i+3,c
   894  000518  D00D               	goto	l2440
   895  00051A                     l2436:
   896                           
   897                           ;MISC.c: 52: {
   898                           ;MISC.c: 53: MSC_DelayNOP(162);
   899  00051A  0E00               	movlw	0
   900  00051C  6E26               	movwf	MSC_DelayNOP@NOPs+1,c
   901  00051E  0EA2               	movlw	162
   902  000520  6E25               	movwf	MSC_DelayNOP@NOPs,c
   903  000522  EC7E  F003         	call	_MSC_DelayNOP	;wreg free
   904  000526  0E01               	movlw	1
   905  000528  262E               	addwf	MSC_DelayMS@i,f,c
   906  00052A  0E00               	movlw	0
   907  00052C  222F               	addwfc	MSC_DelayMS@i+1,f,c
   908  00052E  2230               	addwfc	MSC_DelayMS@i+2,f,c
   909  000530  2231               	addwfc	MSC_DelayMS@i+3,f,c
   910  000532  D000               	goto	l2440
   911  000534                     l2440:
   912  000534  5029               	movf	MSC_DelayMS@US,w,c
   913  000536  5C2E               	subwf	MSC_DelayMS@i,w,c
   914  000538  502A               	movf	MSC_DelayMS@US+1,w,c
   915  00053A  582F               	subwfb	MSC_DelayMS@i+1,w,c
   916  00053C  502B               	movf	MSC_DelayMS@US+2,w,c
   917  00053E  5830               	subwfb	MSC_DelayMS@i+2,w,c
   918  000540  5031               	movf	MSC_DelayMS@i+3,w,c
   919  000542  0A80               	xorlw	128
   920  000544  6E2D               	movwf	??_MSC_DelayMS& (0+255),c
   921  000546  502C               	movf	MSC_DelayMS@US+3,w,c
   922  000548  0A80               	xorlw	128
   923  00054A  582D               	subwfb	??_MSC_DelayMS& (0+255),w,c
   924  00054C  A0D8               	btfss	status,0,c
   925  00054E  D7E5               	goto	l2436
   926  000550  0012               	return		;funcret
   927  000552                     __end_of_MSC_DelayMS:
   928                           	opt stack 0
   929                           tblptru	equ	0xFF8
   930                           tblptrh	equ	0xFF7
   931                           tblptrl	equ	0xFF6
   932                           tablat	equ	0xFF5
   933                           postinc0	equ	0xFEE
   934                           wreg	equ	0xFE8
   935                           status	equ	0xFD8
   936                           
   937 ;; *************** function _MSC_DelayNOP *****************
   938 ;; Defined at:
   939 ;;		line 62 in file "MISC.c"
   940 ;; Parameters:    Size  Location     Type
   941 ;;  NOPs            2   36[COMRAM] unsigned int 
   942 ;; Auto vars:     Size  Location     Type
   943 ;;  i               2   38[COMRAM] unsigned int 
   944 ;; Return value:  Size  Location     Type
   945 ;;		None               void
   946 ;; Registers used:
   947 ;;		wreg, status,2, status,0
   948 ;; Tracked objects:
   949 ;;		On entry : 0/0
   950 ;;		On exit  : 0/0
   951 ;;		Unchanged: 0/0
   952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   953 ;;      Params:         2       0       0       0       0
   954 ;;      Locals:         2       0       0       0       0
   955 ;;      Temps:          0       0       0       0       0
   956 ;;      Totals:         4       0       0       0       0
   957 ;;Total ram usage:        4 bytes
   958 ;; Hardware stack levels used:    1
   959 ;; Hardware stack levels required when called:    5
   960 ;; This function calls:
   961 ;;		Nothing
   962 ;; This function is called by:
   963 ;;		_MSC_DelayMS
   964 ;; This function uses a non-reentrant model
   965 ;;
   966                           
   967                           	psect	text7
   968  0006FC                     __ptext7:
   969                           	opt stack 0
   970  0006FC                     _MSC_DelayNOP:
   971                           	opt stack 23
   972                           
   973                           ;MISC.c: 64: unsigned int i;
   974                           ;MISC.c: 65: for(i=0; i<NOPs; i++)
   975                           
   976                           ;incstack = 0
   977  0006FC  0E00               	movlw	0
   978  0006FE  6E28               	movwf	MSC_DelayNOP@i+1,c
   979  000700  0E00               	movlw	0
   980  000702  6E27               	movwf	MSC_DelayNOP@i,c
   981  000704  D004               	goto	l2432
   982  000706                     l194:
   983                           
   984                           ;MISC.c: 66: {
   985                           ;MISC.c: 67: __nop();
   986  000706  F000               	nop	
   987  000708  4A27               	infsnz	MSC_DelayNOP@i,f,c
   988  00070A  2A28               	incf	MSC_DelayNOP@i+1,f,c
   989  00070C  D000               	goto	l2432
   990  00070E                     l2432:
   991  00070E  5025               	movf	MSC_DelayNOP@NOPs,w,c
   992  000710  5C27               	subwf	MSC_DelayNOP@i,w,c
   993  000712  5026               	movf	MSC_DelayNOP@NOPs+1,w,c
   994  000714  5828               	subwfb	MSC_DelayNOP@i+1,w,c
   995  000716  A0D8               	btfss	status,0,c
   996  000718  D7F6               	goto	l194
   997  00071A  0012               	return		;funcret
   998  00071C                     __end_of_MSC_DelayNOP:
   999                           	opt stack 0
  1000                           tblptru	equ	0xFF8
  1001                           tblptrh	equ	0xFF7
  1002                           tblptrl	equ	0xFF6
  1003                           tablat	equ	0xFF5
  1004                           postinc0	equ	0xFEE
  1005                           wreg	equ	0xFE8
  1006                           status	equ	0xFD8
  1007                           
  1008 ;; *************** function _Init_System *****************
  1009 ;; Defined at:
  1010 ;;		line 153 in file "USER.c"
  1011 ;; Parameters:    Size  Location     Type
  1012 ;;		None
  1013 ;; Auto vars:     Size  Location     Type
  1014 ;;		None
  1015 ;; Return value:  Size  Location     Type
  1016 ;;		None               void
  1017 ;; Registers used:
  1018 ;;		wreg, status,2, status,0, cstack
  1019 ;; Tracked objects:
  1020 ;;		On entry : 0/0
  1021 ;;		On exit  : 0/0
  1022 ;;		Unchanged: 0/0
  1023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1024 ;;      Params:         0       0       0       0       0
  1025 ;;      Locals:         0       0       0       0       0
  1026 ;;      Temps:          0       0       0       0       0
  1027 ;;      Totals:         0       0       0       0       0
  1028 ;;Total ram usage:        0 bytes
  1029 ;; Hardware stack levels used:    1
  1030 ;; Hardware stack levels required when called:    8
  1031 ;; This function calls:
  1032 ;;		_BUT_ReadButton
  1033 ;;		_InitADC
  1034 ;;		_InitButton
  1035 ;;		_InitFlash
  1036 ;;		_InitIR
  1037 ;;		_InitLDO
  1038 ;;		_InitMOTOR
  1039 ;;		_InitRF
  1040 ;;		_InitTimers
  1041 ;; This function is called by:
  1042 ;;		_main
  1043 ;; This function uses a non-reentrant model
  1044 ;;
  1045                           
  1046                           	psect	text8
  1047  000648                     __ptext8:
  1048                           	opt stack 0
  1049  000648                     _Init_System:
  1050                           	opt stack 22
  1051                           
  1052                           ;USER.c: 155: InitTimers();
  1053                           
  1054                           ;incstack = 0
  1055  000648  ECE5  F003         	call	_InitTimers	;wreg free
  1056                           
  1057                           ;USER.c: 156: InitRF();
  1058  00064C  ECED  F003         	call	_InitRF	;wreg free
  1059                           
  1060                           ;USER.c: 157: InitButton();
  1061  000650  ECDC  F003         	call	_InitButton	;wreg free
  1062                           
  1063                           ;USER.c: 158: InitIR();
  1064  000654  ECEF  F003         	call	_InitIR	;wreg free
  1065                           
  1066                           ;USER.c: 159: InitLDO();
  1067  000658  ECEE  F003         	call	_InitLDO	;wreg free
  1068                           
  1069                           ;USER.c: 160: InitMOTOR();
  1070  00065C  ECEA  F003         	call	_InitMOTOR	;wreg free
  1071                           
  1072                           ;USER.c: 161: InitFlash();
  1073  000660  ECF0  F003         	call	_InitFlash	;wreg free
  1074                           
  1075                           ;USER.c: 162: InitADC();
  1076  000664  ECF1  F003         	call	_InitADC	;wreg free
  1077                           
  1078                           ;USER.c: 164: BUT_ReadButton();
  1079  000668  EC3B  F003         	call	_BUT_ReadButton	;wreg free
  1080                           
  1081                           ;USER.c: 165: INTCONbits.RBIF = 0;
  1082  00066C  90F2               	bcf	intcon,0,c	;volatile
  1083                           
  1084                           ;USER.c: 168: RCONbits.IPEN = 1;
  1085  00066E  8ED0               	bsf	4048,7,c	;volatile
  1086                           
  1087                           ;USER.c: 169: INTCONbits.GIE = 1;
  1088  000670  8EF2               	bsf	intcon,7,c	;volatile
  1089                           
  1090                           ;USER.c: 170: INTCONbits.PEIE = 1;
  1091  000672  8CF2               	bsf	intcon,6,c	;volatile
  1092  000674  0012               	return		;funcret
  1093  000676                     __end_of_Init_System:
  1094                           	opt stack 0
  1095                           tblptru	equ	0xFF8
  1096                           tblptrh	equ	0xFF7
  1097                           tblptrl	equ	0xFF6
  1098                           tablat	equ	0xFF5
  1099                           intcon	equ	0xFF2
  1100                           postinc0	equ	0xFEE
  1101                           wreg	equ	0xFE8
  1102                           status	equ	0xFD8
  1103                           
  1104 ;; *************** function _InitTimers *****************
  1105 ;; Defined at:
  1106 ;;		line 139 in file "TIMERS.c"
  1107 ;; Parameters:    Size  Location     Type
  1108 ;;		None
  1109 ;; Auto vars:     Size  Location     Type
  1110 ;;		None
  1111 ;; Return value:  Size  Location     Type
  1112 ;;		None               void
  1113 ;; Registers used:
  1114 ;;		wreg, status,2, cstack
  1115 ;; Tracked objects:
  1116 ;;		On entry : 0/0
  1117 ;;		On exit  : 0/0
  1118 ;;		Unchanged: 0/0
  1119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1120 ;;      Params:         0       0       0       0       0
  1121 ;;      Locals:         0       0       0       0       0
  1122 ;;      Temps:          0       0       0       0       0
  1123 ;;      Totals:         0       0       0       0       0
  1124 ;;Total ram usage:        0 bytes
  1125 ;; Hardware stack levels used:    1
  1126 ;; Hardware stack levels required when called:    7
  1127 ;; This function calls:
  1128 ;;		_InitTimer2
  1129 ;; This function is called by:
  1130 ;;		_Init_System
  1131 ;; This function uses a non-reentrant model
  1132 ;;
  1133                           
  1134                           	psect	text9
  1135  0007CA                     __ptext9:
  1136                           	opt stack 0
  1137  0007CA                     _InitTimers:
  1138                           	opt stack 22
  1139                           
  1140                           ;TIMERS.c: 141: InitTimer2();
  1141                           
  1142                           ;incstack = 0
  1143  0007CA  EC9B  F003         	call	_InitTimer2	;wreg free
  1144  0007CE  0012               	return		;funcret
  1145  0007D0                     __end_of_InitTimers:
  1146                           	opt stack 0
  1147                           tblptru	equ	0xFF8
  1148                           tblptrh	equ	0xFF7
  1149                           tblptrl	equ	0xFF6
  1150                           tablat	equ	0xFF5
  1151                           intcon	equ	0xFF2
  1152                           postinc0	equ	0xFEE
  1153                           wreg	equ	0xFE8
  1154                           status	equ	0xFD8
  1155                           
  1156 ;; *************** function _InitTimer2 *****************
  1157 ;; Defined at:
  1158 ;;		line 149 in file "TIMERS.c"
  1159 ;; Parameters:    Size  Location     Type
  1160 ;;		None
  1161 ;; Auto vars:     Size  Location     Type
  1162 ;;		None
  1163 ;; Return value:  Size  Location     Type
  1164 ;;		None               void
  1165 ;; Registers used:
  1166 ;;		wreg, status,2, cstack
  1167 ;; Tracked objects:
  1168 ;;		On entry : 0/0
  1169 ;;		On exit  : 0/0
  1170 ;;		Unchanged: 0/0
  1171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1172 ;;      Params:         0       0       0       0       0
  1173 ;;      Locals:         0       0       0       0       0
  1174 ;;      Temps:          0       0       0       0       0
  1175 ;;      Totals:         0       0       0       0       0
  1176 ;;Total ram usage:        0 bytes
  1177 ;; Hardware stack levels used:    1
  1178 ;; Hardware stack levels required when called:    6
  1179 ;; This function calls:
  1180 ;;		_TMR_Timer2Int
  1181 ;; This function is called by:
  1182 ;;		_InitTimers
  1183 ;; This function uses a non-reentrant model
  1184 ;;
  1185                           
  1186                           	psect	text10
  1187  000736                     __ptext10:
  1188                           	opt stack 0
  1189  000736                     _InitTimer2:
  1190                           	opt stack 22
  1191                           
  1192                           ;TIMERS.c: 151: T2CONbits.TOUTPS = 0b1111;
  1193                           
  1194                           ;incstack = 0
  1195  000736  86CA               	bsf	4042,3,c	;volatile
  1196  000738  88CA               	bsf	4042,4,c	;volatile
  1197  00073A  8ACA               	bsf	4042,5,c	;volatile
  1198  00073C  8CCA               	bsf	4042,6,c	;volatile
  1199                           
  1200                           ;TIMERS.c: 152: T2CONbits.T2CKPS = 0b11;
  1201  00073E  0E03               	movlw	3
  1202  000740  12CA               	iorwf	4042,f,c	;volatile
  1203                           
  1204                           ;TIMERS.c: 153: IPR1bits.TMR2IP = 0;
  1205  000742  929F               	bcf	3999,1,c	;volatile
  1206                           
  1207                           ;TIMERS.c: 154: PR2 = 0xFF;
  1208  000744  68CB               	setf	4043,c	;volatile
  1209                           
  1210                           ;TIMERS.c: 155: TMR_Timer2Int(1);
  1211  000746  0E01               	movlw	1
  1212  000748  ECB9  F003         	call	_TMR_Timer2Int
  1213  00074C  0012               	return		;funcret
  1214  00074E                     __end_of_InitTimer2:
  1215                           	opt stack 0
  1216                           tblptru	equ	0xFF8
  1217                           tblptrh	equ	0xFF7
  1218                           tblptrl	equ	0xFF6
  1219                           tablat	equ	0xFF5
  1220                           intcon	equ	0xFF2
  1221                           postinc0	equ	0xFEE
  1222                           wreg	equ	0xFE8
  1223                           status	equ	0xFD8
  1224                           
  1225 ;; *************** function _TMR_Timer2Int *****************
  1226 ;; Defined at:
  1227 ;;		line 102 in file "TIMERS.c"
  1228 ;; Parameters:    Size  Location     Type
  1229 ;;  state           1    wreg     unsigned char 
  1230 ;; Auto vars:     Size  Location     Type
  1231 ;;  state           1   36[COMRAM] unsigned char 
  1232 ;; Return value:  Size  Location     Type
  1233 ;;		None               void
  1234 ;; Registers used:
  1235 ;;		wreg, status,2
  1236 ;; Tracked objects:
  1237 ;;		On entry : 0/0
  1238 ;;		On exit  : 0/0
  1239 ;;		Unchanged: 0/0
  1240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1241 ;;      Params:         0       0       0       0       0
  1242 ;;      Locals:         1       0       0       0       0
  1243 ;;      Temps:          0       0       0       0       0
  1244 ;;      Totals:         1       0       0       0       0
  1245 ;;Total ram usage:        1 bytes
  1246 ;; Hardware stack levels used:    1
  1247 ;; Hardware stack levels required when called:    5
  1248 ;; This function calls:
  1249 ;;		Nothing
  1250 ;; This function is called by:
  1251 ;;		_InitTimer2
  1252 ;; This function uses a non-reentrant model
  1253 ;;
  1254                           
  1255                           	psect	text11
  1256  000772                     __ptext11:
  1257                           	opt stack 0
  1258  000772                     _TMR_Timer2Int:
  1259                           	opt stack 22
  1260                           
  1261                           ;incstack = 0
  1262                           ;TMR_Timer2Int@state stored from wreg
  1263  000772  6E25               	movwf	TMR_Timer2Int@state,c
  1264                           
  1265                           ;TIMERS.c: 104: if(state)
  1266  000774  5025               	movf	TMR_Timer2Int@state,w,c
  1267  000776  B4D8               	btfsc	status,2,c
  1268  000778  D002               	goto	l594
  1269                           
  1270                           ;TIMERS.c: 105: {
  1271                           ;TIMERS.c: 107: PIE1bits.TMR2IE = 1;
  1272  00077A  829D               	bsf	3997,1,c	;volatile
  1273                           
  1274                           ;TIMERS.c: 108: }
  1275  00077C  0012               	return	
  1276  00077E                     l594:
  1277                           
  1278                           ;TIMERS.c: 109: else
  1279                           ;TIMERS.c: 110: {
  1280                           ;TIMERS.c: 112: PIE1bits.TMR2IE = 0;
  1281  00077E  929D               	bcf	3997,1,c	;volatile
  1282  000780  0012               	return	
  1283  000782  0012               	return		;funcret
  1284  000784                     __end_of_TMR_Timer2Int:
  1285                           	opt stack 0
  1286                           tblptru	equ	0xFF8
  1287                           tblptrh	equ	0xFF7
  1288                           tblptrl	equ	0xFF6
  1289                           tablat	equ	0xFF5
  1290                           intcon	equ	0xFF2
  1291                           postinc0	equ	0xFEE
  1292                           wreg	equ	0xFE8
  1293                           status	equ	0xFD8
  1294                           
  1295 ;; *************** function _InitRF *****************
  1296 ;; Defined at:
  1297 ;;		line 56 in file "RF.c"
  1298 ;; Parameters:    Size  Location     Type
  1299 ;;		None
  1300 ;; Auto vars:     Size  Location     Type
  1301 ;;		None
  1302 ;; Return value:  Size  Location     Type
  1303 ;;		None               void
  1304 ;; Registers used:
  1305 ;;		None
  1306 ;; Tracked objects:
  1307 ;;		On entry : 0/0
  1308 ;;		On exit  : 0/0
  1309 ;;		Unchanged: 0/0
  1310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1311 ;;      Params:         0       0       0       0       0
  1312 ;;      Locals:         0       0       0       0       0
  1313 ;;      Temps:          0       0       0       0       0
  1314 ;;      Totals:         0       0       0       0       0
  1315 ;;Total ram usage:        0 bytes
  1316 ;; Hardware stack levels used:    1
  1317 ;; Hardware stack levels required when called:    5
  1318 ;; This function calls:
  1319 ;;		Nothing
  1320 ;; This function is called by:
  1321 ;;		_Init_System
  1322 ;; This function uses a non-reentrant model
  1323 ;;
  1324                           
  1325                           	psect	text12
  1326  0007DA                     __ptext12:
  1327                           	opt stack 0
  1328  0007DA                     _InitRF:
  1329                           	opt stack 24
  1330                           
  1331                           ;incstack = 0
  1332  0007DA  0012               	return		;funcret
  1333  0007DC                     __end_of_InitRF:
  1334                           	opt stack 0
  1335                           tblptru	equ	0xFF8
  1336                           tblptrh	equ	0xFF7
  1337                           tblptrl	equ	0xFF6
  1338                           tablat	equ	0xFF5
  1339                           intcon	equ	0xFF2
  1340                           postinc0	equ	0xFEE
  1341                           wreg	equ	0xFE8
  1342                           status	equ	0xFD8
  1343                           
  1344 ;; *************** function _InitMOTOR *****************
  1345 ;; Defined at:
  1346 ;;		line 92 in file "MOTOR.c"
  1347 ;; Parameters:    Size  Location     Type
  1348 ;;		None
  1349 ;; Auto vars:     Size  Location     Type
  1350 ;;		None
  1351 ;; Return value:  Size  Location     Type
  1352 ;;		None               void
  1353 ;; Registers used:
  1354 ;;		None
  1355 ;; Tracked objects:
  1356 ;;		On entry : 0/0
  1357 ;;		On exit  : 0/0
  1358 ;;		Unchanged: 0/0
  1359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1360 ;;      Params:         0       0       0       0       0
  1361 ;;      Locals:         0       0       0       0       0
  1362 ;;      Temps:          0       0       0       0       0
  1363 ;;      Totals:         0       0       0       0       0
  1364 ;;Total ram usage:        0 bytes
  1365 ;; Hardware stack levels used:    1
  1366 ;; Hardware stack levels required when called:    5
  1367 ;; This function calls:
  1368 ;;		Nothing
  1369 ;; This function is called by:
  1370 ;;		_Init_System
  1371 ;; This function uses a non-reentrant model
  1372 ;;
  1373                           
  1374                           	psect	text13
  1375  0007D4                     __ptext13:
  1376                           	opt stack 0
  1377  0007D4                     _InitMOTOR:
  1378                           	opt stack 24
  1379                           
  1380                           ;MOTOR.c: 95: __nop();
  1381                           
  1382                           ;incstack = 0
  1383  0007D4  F000               	nop	
  1384  0007D6  0012               	return		;funcret
  1385  0007D8                     __end_of_InitMOTOR:
  1386                           	opt stack 0
  1387                           tblptru	equ	0xFF8
  1388                           tblptrh	equ	0xFF7
  1389                           tblptrl	equ	0xFF6
  1390                           tablat	equ	0xFF5
  1391                           intcon	equ	0xFF2
  1392                           postinc0	equ	0xFEE
  1393                           wreg	equ	0xFE8
  1394                           status	equ	0xFD8
  1395                           
  1396 ;; *************** function _InitLDO *****************
  1397 ;; Defined at:
  1398 ;;		line 55 in file "LDO.c"
  1399 ;; Parameters:    Size  Location     Type
  1400 ;;		None
  1401 ;; Auto vars:     Size  Location     Type
  1402 ;;		None
  1403 ;; Return value:  Size  Location     Type
  1404 ;;		None               void
  1405 ;; Registers used:
  1406 ;;		None
  1407 ;; Tracked objects:
  1408 ;;		On entry : 0/0
  1409 ;;		On exit  : 0/0
  1410 ;;		Unchanged: 0/0
  1411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1412 ;;      Params:         0       0       0       0       0
  1413 ;;      Locals:         0       0       0       0       0
  1414 ;;      Temps:          0       0       0       0       0
  1415 ;;      Totals:         0       0       0       0       0
  1416 ;;Total ram usage:        0 bytes
  1417 ;; Hardware stack levels used:    1
  1418 ;; Hardware stack levels required when called:    5
  1419 ;; This function calls:
  1420 ;;		Nothing
  1421 ;; This function is called by:
  1422 ;;		_Init_System
  1423 ;; This function uses a non-reentrant model
  1424 ;;
  1425                           
  1426                           	psect	text14
  1427  0007DC                     __ptext14:
  1428                           	opt stack 0
  1429  0007DC                     _InitLDO:
  1430                           	opt stack 24
  1431                           
  1432                           ;incstack = 0
  1433  0007DC  0012               	return		;funcret
  1434  0007DE                     __end_of_InitLDO:
  1435                           	opt stack 0
  1436                           tblptru	equ	0xFF8
  1437                           tblptrh	equ	0xFF7
  1438                           tblptrl	equ	0xFF6
  1439                           tablat	equ	0xFF5
  1440                           intcon	equ	0xFF2
  1441                           postinc0	equ	0xFEE
  1442                           wreg	equ	0xFE8
  1443                           status	equ	0xFD8
  1444                           
  1445 ;; *************** function _InitIR *****************
  1446 ;; Defined at:
  1447 ;;		line 56 in file "IR.c"
  1448 ;; Parameters:    Size  Location     Type
  1449 ;;		None
  1450 ;; Auto vars:     Size  Location     Type
  1451 ;;		None
  1452 ;; Return value:  Size  Location     Type
  1453 ;;		None               void
  1454 ;; Registers used:
  1455 ;;		None
  1456 ;; Tracked objects:
  1457 ;;		On entry : 0/0
  1458 ;;		On exit  : 0/0
  1459 ;;		Unchanged: 0/0
  1460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1461 ;;      Params:         0       0       0       0       0
  1462 ;;      Locals:         0       0       0       0       0
  1463 ;;      Temps:          0       0       0       0       0
  1464 ;;      Totals:         0       0       0       0       0
  1465 ;;Total ram usage:        0 bytes
  1466 ;; Hardware stack levels used:    1
  1467 ;; Hardware stack levels required when called:    5
  1468 ;; This function calls:
  1469 ;;		Nothing
  1470 ;; This function is called by:
  1471 ;;		_Init_System
  1472 ;; This function uses a non-reentrant model
  1473 ;;
  1474                           
  1475                           	psect	text15
  1476  0007DE                     __ptext15:
  1477                           	opt stack 0
  1478  0007DE                     _InitIR:
  1479                           	opt stack 24
  1480                           
  1481                           ;incstack = 0
  1482  0007DE  0012               	return		;funcret
  1483  0007E0                     __end_of_InitIR:
  1484                           	opt stack 0
  1485                           tblptru	equ	0xFF8
  1486                           tblptrh	equ	0xFF7
  1487                           tblptrl	equ	0xFF6
  1488                           tablat	equ	0xFF5
  1489                           intcon	equ	0xFF2
  1490                           postinc0	equ	0xFEE
  1491                           wreg	equ	0xFE8
  1492                           status	equ	0xFD8
  1493                           
  1494 ;; *************** function _InitFlash *****************
  1495 ;; Defined at:
  1496 ;;		line 55 in file "FLASH.c"
  1497 ;; Parameters:    Size  Location     Type
  1498 ;;		None
  1499 ;; Auto vars:     Size  Location     Type
  1500 ;;		None
  1501 ;; Return value:  Size  Location     Type
  1502 ;;		None               void
  1503 ;; Registers used:
  1504 ;;		None
  1505 ;; Tracked objects:
  1506 ;;		On entry : 0/0
  1507 ;;		On exit  : 0/0
  1508 ;;		Unchanged: 0/0
  1509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1510 ;;      Params:         0       0       0       0       0
  1511 ;;      Locals:         0       0       0       0       0
  1512 ;;      Temps:          0       0       0       0       0
  1513 ;;      Totals:         0       0       0       0       0
  1514 ;;Total ram usage:        0 bytes
  1515 ;; Hardware stack levels used:    1
  1516 ;; Hardware stack levels required when called:    5
  1517 ;; This function calls:
  1518 ;;		Nothing
  1519 ;; This function is called by:
  1520 ;;		_Init_System
  1521 ;; This function uses a non-reentrant model
  1522 ;;
  1523                           
  1524                           	psect	text16
  1525  0007E0                     __ptext16:
  1526                           	opt stack 0
  1527  0007E0                     _InitFlash:
  1528                           	opt stack 24
  1529                           
  1530                           ;incstack = 0
  1531  0007E0  0012               	return		;funcret
  1532  0007E2                     __end_of_InitFlash:
  1533                           	opt stack 0
  1534                           tblptru	equ	0xFF8
  1535                           tblptrh	equ	0xFF7
  1536                           tblptrl	equ	0xFF6
  1537                           tablat	equ	0xFF5
  1538                           intcon	equ	0xFF2
  1539                           postinc0	equ	0xFEE
  1540                           wreg	equ	0xFE8
  1541                           status	equ	0xFD8
  1542                           
  1543 ;; *************** function _InitButton *****************
  1544 ;; Defined at:
  1545 ;;		line 78 in file "BUTTON.c"
  1546 ;; Parameters:    Size  Location     Type
  1547 ;;		None
  1548 ;; Auto vars:     Size  Location     Type
  1549 ;;		None
  1550 ;; Return value:  Size  Location     Type
  1551 ;;		None               void
  1552 ;; Registers used:
  1553 ;;		wreg, status,2, cstack
  1554 ;; Tracked objects:
  1555 ;;		On entry : 0/0
  1556 ;;		On exit  : 0/0
  1557 ;;		Unchanged: 0/0
  1558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1559 ;;      Params:         0       0       0       0       0
  1560 ;;      Locals:         0       0       0       0       0
  1561 ;;      Temps:          0       0       0       0       0
  1562 ;;      Totals:         0       0       0       0       0
  1563 ;;Total ram usage:        0 bytes
  1564 ;; Hardware stack levels used:    1
  1565 ;; Hardware stack levels required when called:    6
  1566 ;; This function calls:
  1567 ;;		_BUT_IR_PinChangeInt
  1568 ;; This function is called by:
  1569 ;;		_Init_System
  1570 ;; This function uses a non-reentrant model
  1571 ;;
  1572                           
  1573                           	psect	text17
  1574  0007B8                     __ptext17:
  1575                           	opt stack 0
  1576  0007B8                     _InitButton:
  1577                           	opt stack 23
  1578                           
  1579                           ;BUTTON.c: 81: INTCON2bits.RBIP = 0;
  1580                           
  1581                           ;incstack = 0
  1582  0007B8  90F1               	bcf	intcon2,0,c	;volatile
  1583                           
  1584                           ;BUTTON.c: 82: BUT_IR_PinChangeInt(1);
  1585  0007BA  0E01               	movlw	1
  1586  0007BC  ECC2  F003         	call	_BUT_IR_PinChangeInt
  1587  0007C0  0012               	return		;funcret
  1588  0007C2                     __end_of_InitButton:
  1589                           	opt stack 0
  1590                           tblptru	equ	0xFF8
  1591                           tblptrh	equ	0xFF7
  1592                           tblptrl	equ	0xFF6
  1593                           tablat	equ	0xFF5
  1594                           intcon	equ	0xFF2
  1595                           intcon2	equ	0xFF1
  1596                           postinc0	equ	0xFEE
  1597                           wreg	equ	0xFE8
  1598                           status	equ	0xFD8
  1599                           
  1600 ;; *************** function _BUT_IR_PinChangeInt *****************
  1601 ;; Defined at:
  1602 ;;		line 55 in file "BUTTON.c"
  1603 ;; Parameters:    Size  Location     Type
  1604 ;;  state           1    wreg     unsigned char 
  1605 ;; Auto vars:     Size  Location     Type
  1606 ;;  state           1   36[COMRAM] unsigned char 
  1607 ;; Return value:  Size  Location     Type
  1608 ;;		None               void
  1609 ;; Registers used:
  1610 ;;		wreg, status,2
  1611 ;; Tracked objects:
  1612 ;;		On entry : 0/0
  1613 ;;		On exit  : 0/0
  1614 ;;		Unchanged: 0/0
  1615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1616 ;;      Params:         0       0       0       0       0
  1617 ;;      Locals:         1       0       0       0       0
  1618 ;;      Temps:          0       0       0       0       0
  1619 ;;      Totals:         1       0       0       0       0
  1620 ;;Total ram usage:        1 bytes
  1621 ;; Hardware stack levels used:    1
  1622 ;; Hardware stack levels required when called:    5
  1623 ;; This function calls:
  1624 ;;		Nothing
  1625 ;; This function is called by:
  1626 ;;		_InitButton
  1627 ;; This function uses a non-reentrant model
  1628 ;;
  1629                           
  1630                           	psect	text18
  1631  000784                     __ptext18:
  1632                           	opt stack 0
  1633  000784                     _BUT_IR_PinChangeInt:
  1634                           	opt stack 23
  1635                           
  1636                           ;incstack = 0
  1637                           ;BUT_IR_PinChangeInt@state stored from wreg
  1638  000784  6E25               	movwf	BUT_IR_PinChangeInt@state,c
  1639                           
  1640                           ;BUTTON.c: 57: if(state)
  1641  000786  5025               	movf	BUT_IR_PinChangeInt@state,w,c
  1642  000788  B4D8               	btfsc	status,2,c
  1643  00078A  D002               	goto	l550
  1644                           
  1645                           ;BUTTON.c: 58: {
  1646                           ;BUTTON.c: 60: INTCONbits.RBIE = 1;
  1647  00078C  86F2               	bsf	intcon,3,c	;volatile
  1648                           
  1649                           ;BUTTON.c: 61: }
  1650  00078E  0012               	return	
  1651  000790                     l550:
  1652                           
  1653                           ;BUTTON.c: 62: else
  1654                           ;BUTTON.c: 63: {
  1655                           ;BUTTON.c: 65: INTCONbits.RBIE = 0;
  1656  000790  96F2               	bcf	intcon,3,c	;volatile
  1657  000792  0012               	return	
  1658  000794  0012               	return		;funcret
  1659  000796                     __end_of_BUT_IR_PinChangeInt:
  1660                           	opt stack 0
  1661                           tblptru	equ	0xFF8
  1662                           tblptrh	equ	0xFF7
  1663                           tblptrl	equ	0xFF6
  1664                           tablat	equ	0xFF5
  1665                           intcon	equ	0xFF2
  1666                           intcon2	equ	0xFF1
  1667                           postinc0	equ	0xFEE
  1668                           wreg	equ	0xFE8
  1669                           status	equ	0xFD8
  1670                           
  1671 ;; *************** function _InitADC *****************
  1672 ;; Defined at:
  1673 ;;		line 55 in file "ADC.c"
  1674 ;; Parameters:    Size  Location     Type
  1675 ;;		None
  1676 ;; Auto vars:     Size  Location     Type
  1677 ;;		None
  1678 ;; Return value:  Size  Location     Type
  1679 ;;		None               void
  1680 ;; Registers used:
  1681 ;;		None
  1682 ;; Tracked objects:
  1683 ;;		On entry : 0/0
  1684 ;;		On exit  : 0/0
  1685 ;;		Unchanged: 0/0
  1686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1687 ;;      Params:         0       0       0       0       0
  1688 ;;      Locals:         0       0       0       0       0
  1689 ;;      Temps:          0       0       0       0       0
  1690 ;;      Totals:         0       0       0       0       0
  1691 ;;Total ram usage:        0 bytes
  1692 ;; Hardware stack levels used:    1
  1693 ;; Hardware stack levels required when called:    5
  1694 ;; This function calls:
  1695 ;;		Nothing
  1696 ;; This function is called by:
  1697 ;;		_Init_System
  1698 ;; This function uses a non-reentrant model
  1699 ;;
  1700                           
  1701                           	psect	text19
  1702  0007E2                     __ptext19:
  1703                           	opt stack 0
  1704  0007E2                     _InitADC:
  1705                           	opt stack 24
  1706                           
  1707                           ;incstack = 0
  1708  0007E2  0012               	return		;funcret
  1709  0007E4                     __end_of_InitADC:
  1710                           	opt stack 0
  1711                           tblptru	equ	0xFF8
  1712                           tblptrh	equ	0xFF7
  1713                           tblptrl	equ	0xFF6
  1714                           tablat	equ	0xFF5
  1715                           intcon	equ	0xFF2
  1716                           intcon2	equ	0xFF1
  1717                           postinc0	equ	0xFEE
  1718                           wreg	equ	0xFE8
  1719                           status	equ	0xFD8
  1720                           
  1721 ;; *************** function _BUT_ReadButton *****************
  1722 ;; Defined at:
  1723 ;;		line 91 in file "BUTTON.c"
  1724 ;; Parameters:    Size  Location     Type
  1725 ;;		None
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;  value           1   36[COMRAM] unsigned char 
  1728 ;; Return value:  Size  Location     Type
  1729 ;;                  1    wreg      unsigned char 
  1730 ;; Registers used:
  1731 ;;		wreg, status,2, status,0
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1737 ;;      Params:         0       0       0       0       0
  1738 ;;      Locals:         1       0       0       0       0
  1739 ;;      Temps:          0       0       0       0       0
  1740 ;;      Totals:         1       0       0       0       0
  1741 ;;Total ram usage:        1 bytes
  1742 ;; Hardware stack levels used:    1
  1743 ;; Hardware stack levels required when called:    5
  1744 ;; This function calls:
  1745 ;;		Nothing
  1746 ;; This function is called by:
  1747 ;;		_Init_System
  1748 ;; This function uses a non-reentrant model
  1749 ;;
  1750                           
  1751                           	psect	text20
  1752  000676                     __ptext20:
  1753                           	opt stack 0
  1754  000676                     _BUT_ReadButton:
  1755                           	opt stack 24
  1756                           
  1757                           ;BUTTON.c: 93: unsigned char value = PORTB;
  1758                           
  1759                           ;incstack = 0
  1760  000676  CF81 F025          	movff	3969,BUT_ReadButton@value	;volatile
  1761                           
  1762                           ;BUTTON.c: 94: if((value & 0x20) == 0)
  1763  00067A  BA25               	btfsc	BUT_ReadButton@value,5,c
  1764  00067C  D009               	goto	l1326
  1765                           
  1766                           ;BUTTON.c: 95: {
  1767                           ;BUTTON.c: 97: if(ButtonValue_prev == 0)
  1768  00067E  5045               	movf	_ButtonValue_prev,w,c
  1769  000680  A4D8               	btfss	status,2,c
  1770  000682  D002               	goto	l559
  1771                           
  1772                           ;BUTTON.c: 98: {
  1773                           ;BUTTON.c: 99: ButtonChange = 1;
  1774  000684  0E01               	movlw	1
  1775  000686  6E3E               	movwf	_ButtonChange,c
  1776  000688                     l559:
  1777                           
  1778                           ;BUTTON.c: 100: }
  1779                           ;BUTTON.c: 101: ButtonValue_prev = 1;
  1780  000688  0E01               	movlw	1
  1781  00068A  6E45               	movwf	_ButtonValue_prev,c
  1782                           
  1783                           ;BUTTON.c: 102: return 1;
  1784  00068C  0E01               	movlw	1
  1785  00068E  0012               	return	
  1786  000690                     l1326:
  1787                           
  1788                           ;BUTTON.c: 103: }
  1789                           ;BUTTON.c: 106: if(ButtonValue_prev == 1)
  1790  000690  0445               	decf	_ButtonValue_prev,w,c
  1791  000692  A4D8               	btfss	status,2,c
  1792  000694  D002               	goto	l561
  1793                           
  1794                           ;BUTTON.c: 107: {
  1795                           ;BUTTON.c: 108: ButtonChange = 1;
  1796  000696  0E01               	movlw	1
  1797  000698  6E3E               	movwf	_ButtonChange,c
  1798  00069A                     l561:
  1799                           
  1800                           ;BUTTON.c: 109: }
  1801                           ;BUTTON.c: 110: ButtonValue_prev = 0;
  1802  00069A  0E00               	movlw	0
  1803  00069C  6E45               	movwf	_ButtonValue_prev,c
  1804                           
  1805                           ;BUTTON.c: 111: return 0;
  1806  00069E  0E00               	movlw	0
  1807  0006A0  0012               	return	
  1808  0006A2  0012               	return		;funcret
  1809  0006A4                     __end_of_BUT_ReadButton:
  1810                           	opt stack 0
  1811                           tblptru	equ	0xFF8
  1812                           tblptrh	equ	0xFF7
  1813                           tblptrl	equ	0xFF6
  1814                           tablat	equ	0xFF5
  1815                           intcon	equ	0xFF2
  1816                           intcon2	equ	0xFF1
  1817                           postinc0	equ	0xFEE
  1818                           wreg	equ	0xFE8
  1819                           status	equ	0xFD8
  1820                           
  1821 ;; *************** function _Init_App *****************
  1822 ;; Defined at:
  1823 ;;		line 72 in file "USER.c"
  1824 ;; Parameters:    Size  Location     Type
  1825 ;;		None
  1826 ;; Auto vars:     Size  Location     Type
  1827 ;;		None
  1828 ;; Return value:  Size  Location     Type
  1829 ;;		None               void
  1830 ;; Registers used:
  1831 ;;		wreg, status,2
  1832 ;; Tracked objects:
  1833 ;;		On entry : 0/0
  1834 ;;		On exit  : 0/0
  1835 ;;		Unchanged: 0/0
  1836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1837 ;;      Params:         0       0       0       0       0
  1838 ;;      Locals:         0       0       0       0       0
  1839 ;;      Temps:          0       0       0       0       0
  1840 ;;      Totals:         0       0       0       0       0
  1841 ;;Total ram usage:        0 bytes
  1842 ;; Hardware stack levels used:    1
  1843 ;; Hardware stack levels required when called:    5
  1844 ;; This function calls:
  1845 ;;		Nothing
  1846 ;; This function is called by:
  1847 ;;		_main
  1848 ;; This function uses a non-reentrant model
  1849 ;;
  1850                           
  1851                           	psect	text21
  1852  0005DA                     __ptext21:
  1853                           	opt stack 0
  1854  0005DA                     _Init_App:
  1855                           	opt stack 25
  1856                           
  1857                           ;USER.c: 74: LATA = 0;
  1858                           
  1859                           ;incstack = 0
  1860  0005DA  0E00               	movlw	0
  1861  0005DC  6E89               	movwf	3977,c	;volatile
  1862                           
  1863                           ;USER.c: 75: LATB = 0;
  1864  0005DE  0E00               	movlw	0
  1865  0005E0  6E8A               	movwf	3978,c	;volatile
  1866                           
  1867                           ;USER.c: 76: LATC = 0;
  1868  0005E2  0E00               	movlw	0
  1869  0005E4  6E8B               	movwf	3979,c	;volatile
  1870                           
  1871                           ;USER.c: 78: ADCON1bits.PCFG = 0b1101;
  1872  0005E6  50C1               	movf	4033,w,c	;volatile
  1873  0005E8  0BF0               	andlw	-16
  1874  0005EA  090D               	iorlw	13
  1875  0005EC  6EC1               	movwf	4033,c	;volatile
  1876                           
  1877                           ;USER.c: 81: TRISCbits.TRISC0 = 1;
  1878  0005EE  8094               	bsf	3988,0,c	;volatile
  1879                           
  1880                           ;USER.c: 82: TRISCbits.TRISC1 = 1;
  1881  0005F0  8294               	bsf	3988,1,c	;volatile
  1882                           
  1883                           ;USER.c: 85: TRISAbits.TRISA0 = 1;
  1884  0005F2  8092               	bsf	3986,0,c	;volatile
  1885                           
  1886                           ;USER.c: 89: TRISAbits.TRISA1 = 1;
  1887  0005F4  8292               	bsf	3986,1,c	;volatile
  1888                           
  1889                           ;USER.c: 92: TRISAbits.TRISA2 = 0;
  1890  0005F6  9492               	bcf	3986,2,c	;volatile
  1891                           
  1892                           ;USER.c: 95: TRISAbits.TRISA5 = 0;
  1893  0005F8  9A92               	bcf	3986,5,c	;volatile
  1894                           
  1895                           ;USER.c: 98: TRISBbits.TRISB1 = 1;
  1896  0005FA  8293               	bsf	3987,1,c	;volatile
  1897                           
  1898                           ;USER.c: 99: TRISBbits.TRISB2 = 1;
  1899  0005FC  8493               	bsf	3987,2,c	;volatile
  1900                           
  1901                           ;USER.c: 103: TRISBbits.TRISB3 = 0;
  1902  0005FE  9693               	bcf	3987,3,c	;volatile
  1903                           
  1904                           ;USER.c: 106: TRISCbits.TRISC2 = 0;
  1905  000600  9494               	bcf	3988,2,c	;volatile
  1906                           
  1907                           ;USER.c: 110: TRISCbits.TRISC3 = 1;
  1908  000602  8694               	bsf	3988,3,c	;volatile
  1909                           
  1910                           ;USER.c: 113: TRISCbits.TRISC5 = 0;
  1911  000604  9A94               	bcf	3988,5,c	;volatile
  1912                           
  1913                           ;USER.c: 117: TRISCbits.TRISC4 = 0;
  1914  000606  9894               	bcf	3988,4,c	;volatile
  1915                           
  1916                           ;USER.c: 121: TRISBbits.TRISB0 = 1;
  1917  000608  8093               	bsf	3987,0,c	;volatile
  1918                           
  1919                           ;USER.c: 122: TRISBbits.TRISB4 = 1;
  1920  00060A  8893               	bsf	3987,4,c	;volatile
  1921                           
  1922                           ;USER.c: 126: TRISBbits.TRISB5 = 1;
  1923  00060C  8A93               	bsf	3987,5,c	;volatile
  1924                           
  1925                           ;USER.c: 130: TRISAbits.TRISA3 = 1;
  1926  00060E  8692               	bsf	3986,3,c	;volatile
  1927                           
  1928                           ;USER.c: 142: TRISCbits.TRISC6 = 0;
  1929  000610  9C94               	bcf	3988,6,c	;volatile
  1930                           
  1931                           ;USER.c: 143: TRISCbits.TRISC7 = 0;
  1932  000612  9E94               	bcf	3988,7,c	;volatile
  1933  000614  0012               	return		;funcret
  1934  000616                     __end_of_Init_App:
  1935                           	opt stack 0
  1936                           tblptru	equ	0xFF8
  1937                           tblptrh	equ	0xFF7
  1938                           tblptrl	equ	0xFF6
  1939                           tablat	equ	0xFF5
  1940                           intcon	equ	0xFF2
  1941                           intcon2	equ	0xFF1
  1942                           postinc0	equ	0xFEE
  1943                           wreg	equ	0xFE8
  1944                           status	equ	0xFD8
  1945                           
  1946 ;; *************** function _low_isr *****************
  1947 ;; Defined at:
  1948 ;;		line 53 in file "INTERRUPTS.c"
  1949 ;; Parameters:    Size  Location     Type
  1950 ;;		None
  1951 ;; Auto vars:     Size  Location     Type
  1952 ;;  button_state    1   21[COMRAM] unsigned char 
  1953 ;; Return value:  Size  Location     Type
  1954 ;;		None               void
  1955 ;; Registers used:
  1956 ;;		wreg, status,2, status,0, cstack
  1957 ;; Tracked objects:
  1958 ;;		On entry : 0/0
  1959 ;;		On exit  : 0/0
  1960 ;;		Unchanged: 0/0
  1961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1962 ;;      Params:         0       0       0       0       0
  1963 ;;      Locals:         1       0       0       0       0
  1964 ;;      Temps:         17       0       0       0       0
  1965 ;;      Totals:        18       0       0       0       0
  1966 ;;Total ram usage:       18 bytes
  1967 ;; Hardware stack levels used:    1
  1968 ;; Hardware stack levels required when called:    4
  1969 ;; This function calls:
  1970 ;;		_IR_ReadReceiver
  1971 ;;		_TMR_Timer2
  1972 ;;		_TMR_Timer2Free
  1973 ;;		_TMR_Timer2Start
  1974 ;;		i1_BUT_ReadButton
  1975 ;; This function is called by:
  1976 ;;		Interrupt level 1
  1977 ;; This function uses a non-reentrant model
  1978 ;;
  1979                           
  1980                           	psect	intcodelo
  1981  000018                     __pintcodelo:
  1982                           	opt stack 0
  1983  000018                     _low_isr:
  1984                           	opt stack 22
  1985                           
  1986                           ;incstack = 0
  1987  000018  CFD8 F005          	movff	status,??_low_isr
  1988  00001C  CFE8 F006          	movff	wreg,??_low_isr+1
  1989  000020  CFE0 F007          	movff	bsr,??_low_isr+2
  1990  000024  CFFA F008          	movff	pclath,??_low_isr+3
  1991  000028  CFFB F009          	movff	pclatu,??_low_isr+4
  1992  00002C  CFE9 F00A          	movff	fsr0l,??_low_isr+5
  1993  000030  CFEA F00B          	movff	fsr0h,??_low_isr+6
  1994  000034  CFE1 F00C          	movff	fsr1l,??_low_isr+7
  1995  000038  CFE2 F00D          	movff	fsr1h,??_low_isr+8
  1996  00003C  CFD9 F00E          	movff	fsr2l,??_low_isr+9
  1997  000040  CFDA F00F          	movff	fsr2h,??_low_isr+10
  1998  000044  CFF3 F010          	movff	prodl,??_low_isr+11
  1999  000048  CFF4 F011          	movff	prodh,??_low_isr+12
  2000  00004C  CFF6 F012          	movff	tblptrl,??_low_isr+13
  2001  000050  CFF7 F013          	movff	tblptrh,??_low_isr+14
  2002  000054  CFF8 F014          	movff	tblptru,??_low_isr+15
  2003  000058  CFF5 F015          	movff	tablat,??_low_isr+16
  2004                           
  2005                           ;INTERRUPTS.c: 55: unsigned char button_state;
  2006                           ;INTERRUPTS.c: 57: if(INTCONbits.RBIF)
  2007  00005C  A0F2               	btfss	intcon,0,c	;volatile
  2008  00005E  D026               	goto	i1l63
  2009                           
  2010                           ;INTERRUPTS.c: 58: {
  2011                           ;INTERRUPTS.c: 63: button_state = BUT_ReadButton();
  2012  000060  EC52  F003         	call	i1_BUT_ReadButton	;wreg free
  2013  000064  6E16               	movwf	low_isr@button_state,c
  2014                           
  2015                           ;INTERRUPTS.c: 64: if(ButtonChange)
  2016  000066  503E               	movf	_ButtonChange,w,c
  2017  000068  B4D8               	btfsc	status,2,c
  2018  00006A  D01B               	goto	i1l2514
  2019                           
  2020                           ;INTERRUPTS.c: 65: {
  2021                           ;INTERRUPTS.c: 67: if(button_state)
  2022  00006C  5016               	movf	low_isr@button_state,w,c
  2023  00006E  B4D8               	btfsc	status,2,c
  2024  000070  D015               	goto	i1l2512
  2025                           
  2026                           ;INTERRUPTS.c: 68: {
  2027                           ;INTERRUPTS.c: 70: if(ButtonTimer == 1)
  2028  000072  0444               	decf	_ButtonTimer,w,c
  2029  000074  A4D8               	btfss	status,2,c
  2030  000076  D002               	goto	i1l66
  2031                           
  2032                           ;INTERRUPTS.c: 71: {
  2033                           ;INTERRUPTS.c: 72: Button_Data = 1;
  2034  000078  0E01               	movlw	1
  2035  00007A  6E3F               	movwf	_Button_Data,c
  2036  00007C                     i1l66:
  2037                           
  2038                           ;INTERRUPTS.c: 73: }
  2039                           ;INTERRUPTS.c: 74: ButtonTimer = 0;
  2040  00007C  0E00               	movlw	0
  2041  00007E  6E44               	movwf	_ButtonTimer,c
  2042                           
  2043                           ;INTERRUPTS.c: 75: if(TMR_Timer2Free())
  2044  000080  ECD4  F003         	call	_TMR_Timer2Free	;wreg free
  2045  000084  0900               	iorlw	0
  2046  000086  B4D8               	btfsc	status,2,c
  2047  000088  D009               	goto	i1l2512
  2048                           
  2049                           ;INTERRUPTS.c: 76: {
  2050                           ;INTERRUPTS.c: 77: Timer2Use = 15;
  2051  00008A  0E0F               	movlw	15
  2052  00008C  6E43               	movwf	_Timer2Use,c
  2053                           
  2054                           ;INTERRUPTS.c: 78: TMR_Timer2Start(5);
  2055  00008E  0E00               	movlw	0
  2056  000090  6E04               	movwf	TMR_Timer2Start@time+1,c
  2057  000092  0E05               	movlw	5
  2058  000094  6E03               	movwf	TMR_Timer2Start@time,c
  2059  000096  EC8E  F003         	call	_TMR_Timer2Start	;wreg free
  2060  00009A  D000               	goto	i1l2512
  2061  00009C                     i1l2512:
  2062                           
  2063                           ;INTERRUPTS.c: 79: }
  2064                           ;INTERRUPTS.c: 80: }
  2065                           ;INTERRUPTS.c: 81: ButtonChange = 0;
  2066  00009C  0E00               	movlw	0
  2067  00009E  6E3E               	movwf	_ButtonChange,c
  2068                           
  2069                           ;INTERRUPTS.c: 82: }
  2070  0000A0  D003               	goto	i1l2516
  2071  0000A2                     i1l2514:
  2072                           
  2073                           ;INTERRUPTS.c: 83: else
  2074                           ;INTERRUPTS.c: 84: {
  2075                           ;INTERRUPTS.c: 85: IR_ReadReceiver();
  2076  0000A2  ECE1  F003         	call	_IR_ReadReceiver	;wreg free
  2077  0000A6  D000               	goto	i1l2516
  2078  0000A8                     i1l2516:
  2079                           
  2080                           ;INTERRUPTS.c: 86: }
  2081                           ;INTERRUPTS.c: 87: INTCONbits.RBIF = 0;
  2082  0000A8  90F2               	bcf	intcon,0,c	;volatile
  2083                           
  2084                           ;INTERRUPTS.c: 88: }
  2085  0000AA  D01D               	goto	i1l76
  2086  0000AC                     i1l63:
  2087                           
  2088                           ;INTERRUPTS.c: 89: else if(PIR1bits.TMR2IF)
  2089  0000AC  A29E               	btfss	3998,1,c	;volatile
  2090  0000AE  D019               	goto	i1l70
  2091                           
  2092                           ;INTERRUPTS.c: 90: {
  2093                           ;INTERRUPTS.c: 92: if(Timer2PostCount >= Timer2Post)
  2094  0000B0  5038               	movf	_Timer2Post,w,c
  2095  0000B2  5C3A               	subwf	_Timer2PostCount,w,c
  2096  0000B4  5039               	movf	_Timer2Post+1,w,c
  2097  0000B6  583B               	subwfb	_Timer2PostCount+1,w,c
  2098  0000B8  A0D8               	btfss	status,0,c
  2099  0000BA  D00E               	goto	i1l2526
  2100                           
  2101                           ;INTERRUPTS.c: 93: {
  2102                           ;INTERRUPTS.c: 94: TMR_Timer2(0);
  2103  0000BC  0E00               	movlw	0
  2104  0000BE  ECCB  F003         	call	_TMR_Timer2
  2105                           
  2106                           ;INTERRUPTS.c: 95: if(Timer2Use == 15)
  2107  0000C2  0E0F               	movlw	15
  2108  0000C4  1843               	xorwf	_Timer2Use,w,c
  2109  0000C6  A4D8               	btfss	status,2,c
  2110  0000C8  D005               	goto	i1l72
  2111                           
  2112                           ;INTERRUPTS.c: 96: {
  2113                           ;INTERRUPTS.c: 97: ButtonTimer = 1;
  2114  0000CA  0E01               	movlw	1
  2115  0000CC  6E44               	movwf	_ButtonTimer,c
  2116                           
  2117                           ;INTERRUPTS.c: 98: Timer2Use = 0;
  2118  0000CE  0E00               	movlw	0
  2119  0000D0  6E43               	movwf	_Timer2Use,c
  2120                           
  2121                           ;INTERRUPTS.c: 99: }
  2122  0000D2  D005               	goto	i1l2528
  2123  0000D4                     i1l72:
  2124                           
  2125                           ;INTERRUPTS.c: 100: else
  2126                           ;INTERRUPTS.c: 101: {
  2127                           ;INTERRUPTS.c: 102: __nop();
  2128  0000D4  F000               	nop	
  2129                           
  2130                           ;INTERRUPTS.c: 103: }
  2131                           ;INTERRUPTS.c: 104: }
  2132  0000D6  D003               	goto	i1l2528
  2133  0000D8                     i1l2526:
  2134                           
  2135                           ;INTERRUPTS.c: 105: else
  2136                           ;INTERRUPTS.c: 106: {
  2137                           ;INTERRUPTS.c: 107: Timer2PostCount++;
  2138  0000D8  4A3A               	infsnz	_Timer2PostCount,f,c
  2139  0000DA  2A3B               	incf	_Timer2PostCount+1,f,c
  2140  0000DC  D000               	goto	i1l2528
  2141  0000DE                     i1l2528:
  2142                           
  2143                           ;INTERRUPTS.c: 108: }
  2144                           ;INTERRUPTS.c: 109: PIR1bits.TMR2IF = 0;
  2145  0000DE  929E               	bcf	3998,1,c	;volatile
  2146                           
  2147                           ;INTERRUPTS.c: 110: }
  2148  0000E0  D002               	goto	i1l76
  2149  0000E2                     i1l70:
  2150                           
  2151                           ;INTERRUPTS.c: 111: else
  2152                           ;INTERRUPTS.c: 112: {
  2153                           ;INTERRUPTS.c: 114: __nop();
  2154  0000E2  F000               	nop	
  2155  0000E4  D000               	goto	i1l76
  2156  0000E6                     i1l76:
  2157  0000E6  C015  FFF5         	movff	??_low_isr+16,tablat
  2158  0000EA  C014  FFF8         	movff	??_low_isr+15,tblptru
  2159  0000EE  C013  FFF7         	movff	??_low_isr+14,tblptrh
  2160  0000F2  C012  FFF6         	movff	??_low_isr+13,tblptrl
  2161  0000F6  C011  FFF4         	movff	??_low_isr+12,prodh
  2162  0000FA  C010  FFF3         	movff	??_low_isr+11,prodl
  2163  0000FE  C00F  FFDA         	movff	??_low_isr+10,fsr2h
  2164  000102  C00E  FFD9         	movff	??_low_isr+9,fsr2l
  2165  000106  C00D  FFE2         	movff	??_low_isr+8,fsr1h
  2166  00010A  C00C  FFE1         	movff	??_low_isr+7,fsr1l
  2167  00010E  C00B  FFEA         	movff	??_low_isr+6,fsr0h
  2168  000112  C00A  FFE9         	movff	??_low_isr+5,fsr0l
  2169  000116  C009  FFFB         	movff	??_low_isr+4,pclatu
  2170  00011A  C008  FFFA         	movff	??_low_isr+3,pclath
  2171  00011E  C007  FFE0         	movff	??_low_isr+2,bsr
  2172  000122  C006  FFE8         	movff	??_low_isr+1,wreg
  2173  000126  C005  FFD8         	movff	??_low_isr,status
  2174  00012A  0010               	retfie	
  2175  00012C                     __end_of_low_isr:
  2176                           	opt stack 0
  2177                           pclatu	equ	0xFFB
  2178                           pclath	equ	0xFFA
  2179                           tblptru	equ	0xFF8
  2180                           tblptrh	equ	0xFF7
  2181                           tblptrl	equ	0xFF6
  2182                           tablat	equ	0xFF5
  2183                           prodh	equ	0xFF4
  2184                           prodl	equ	0xFF3
  2185                           intcon	equ	0xFF2
  2186                           intcon2	equ	0xFF1
  2187                           postinc0	equ	0xFEE
  2188                           fsr0h	equ	0xFEA
  2189                           fsr0l	equ	0xFE9
  2190                           wreg	equ	0xFE8
  2191                           fsr1h	equ	0xFE2
  2192                           fsr1l	equ	0xFE1
  2193                           bsr	equ	0xFE0
  2194                           fsr2h	equ	0xFDA
  2195                           fsr2l	equ	0xFD9
  2196                           status	equ	0xFD8
  2197                           
  2198 ;; *************** function i1_BUT_ReadButton *****************
  2199 ;; Defined at:
  2200 ;;		line 91 in file "BUTTON.c"
  2201 ;; Parameters:    Size  Location     Type
  2202 ;;		None
  2203 ;; Auto vars:     Size  Location     Type
  2204 ;;  BUT_ReadButt    1    0[COMRAM] unsigned char 
  2205 ;; Return value:  Size  Location     Type
  2206 ;;                  1    wreg      unsigned char 
  2207 ;; Registers used:
  2208 ;;		wreg, status,2, status,0
  2209 ;; Tracked objects:
  2210 ;;		On entry : 0/0
  2211 ;;		On exit  : 0/0
  2212 ;;		Unchanged: 0/0
  2213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2214 ;;      Params:         0       0       0       0       0
  2215 ;;      Locals:         1       0       0       0       0
  2216 ;;      Temps:          0       0       0       0       0
  2217 ;;      Totals:         1       0       0       0       0
  2218 ;;Total ram usage:        1 bytes
  2219 ;; Hardware stack levels used:    1
  2220 ;; Hardware stack levels required when called:    1
  2221 ;; This function calls:
  2222 ;;		Nothing
  2223 ;; This function is called by:
  2224 ;;		_low_isr
  2225 ;; This function uses a non-reentrant model
  2226 ;;
  2227                           
  2228                           	psect	text23
  2229  0006A4                     __ptext23:
  2230                           	opt stack 0
  2231  0006A4                     i1_BUT_ReadButton:
  2232                           	opt stack 24
  2233                           
  2234                           ;BUTTON.c: 93: unsigned char value = PORTB;
  2235                           
  2236                           ;incstack = 0
  2237  0006A4  CF81 F001          	movff	3969,i1BUT_ReadButton@value	;volatile
  2238                           
  2239                           ;BUTTON.c: 94: if((value & 0x20) == 0)
  2240  0006A8  BA01               	btfsc	i1BUT_ReadButton@value,5,c
  2241  0006AA  D009               	goto	i1l1560
  2242                           
  2243                           ;BUTTON.c: 95: {
  2244                           ;BUTTON.c: 97: if(ButtonValue_prev == 0)
  2245  0006AC  5045               	movf	_ButtonValue_prev,w,c
  2246  0006AE  A4D8               	btfss	status,2,c
  2247  0006B0  D002               	goto	i1l559
  2248                           
  2249                           ;BUTTON.c: 98: {
  2250                           ;BUTTON.c: 99: ButtonChange = 1;
  2251  0006B2  0E01               	movlw	1
  2252  0006B4  6E3E               	movwf	_ButtonChange,c
  2253  0006B6                     i1l559:
  2254                           
  2255                           ;BUTTON.c: 100: }
  2256                           ;BUTTON.c: 101: ButtonValue_prev = 1;
  2257  0006B6  0E01               	movlw	1
  2258  0006B8  6E45               	movwf	_ButtonValue_prev,c
  2259                           
  2260                           ;BUTTON.c: 102: return 1;
  2261  0006BA  0E01               	movlw	1
  2262  0006BC  0012               	return	
  2263  0006BE                     i1l1560:
  2264                           
  2265                           ;BUTTON.c: 103: }
  2266                           ;BUTTON.c: 106: if(ButtonValue_prev == 1)
  2267  0006BE  0445               	decf	_ButtonValue_prev,w,c
  2268  0006C0  A4D8               	btfss	status,2,c
  2269  0006C2  D002               	goto	i1l561
  2270                           
  2271                           ;BUTTON.c: 107: {
  2272                           ;BUTTON.c: 108: ButtonChange = 1;
  2273  0006C4  0E01               	movlw	1
  2274  0006C6  6E3E               	movwf	_ButtonChange,c
  2275  0006C8                     i1l561:
  2276                           
  2277                           ;BUTTON.c: 109: }
  2278                           ;BUTTON.c: 110: ButtonValue_prev = 0;
  2279  0006C8  0E00               	movlw	0
  2280  0006CA  6E45               	movwf	_ButtonValue_prev,c
  2281                           
  2282                           ;BUTTON.c: 111: return 0;
  2283  0006CC  0E00               	movlw	0
  2284  0006CE  0012               	return	
  2285  0006D0  0012               	return		;funcret
  2286  0006D2                     __end_ofi1_BUT_ReadButton:
  2287                           	opt stack 0
  2288                           pclatu	equ	0xFFB
  2289                           pclath	equ	0xFFA
  2290                           tblptru	equ	0xFF8
  2291                           tblptrh	equ	0xFF7
  2292                           tblptrl	equ	0xFF6
  2293                           tablat	equ	0xFF5
  2294                           prodh	equ	0xFF4
  2295                           prodl	equ	0xFF3
  2296                           intcon	equ	0xFF2
  2297                           intcon2	equ	0xFF1
  2298                           postinc0	equ	0xFEE
  2299                           fsr0h	equ	0xFEA
  2300                           fsr0l	equ	0xFE9
  2301                           wreg	equ	0xFE8
  2302                           fsr1h	equ	0xFE2
  2303                           fsr1l	equ	0xFE1
  2304                           bsr	equ	0xFE0
  2305                           fsr2h	equ	0xFDA
  2306                           fsr2l	equ	0xFD9
  2307                           status	equ	0xFD8
  2308                           
  2309 ;; *************** function _TMR_Timer2Start *****************
  2310 ;; Defined at:
  2311 ;;		line 163 in file "TIMERS.c"
  2312 ;; Parameters:    Size  Location     Type
  2313 ;;  time            2    2[COMRAM] unsigned int 
  2314 ;; Auto vars:     Size  Location     Type
  2315 ;;		None
  2316 ;; Return value:  Size  Location     Type
  2317 ;;		None               void
  2318 ;; Registers used:
  2319 ;;		wreg, status,2, cstack
  2320 ;; Tracked objects:
  2321 ;;		On entry : 0/0
  2322 ;;		On exit  : 0/0
  2323 ;;		Unchanged: 0/0
  2324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2325 ;;      Params:         2       0       0       0       0
  2326 ;;      Locals:         0       0       0       0       0
  2327 ;;      Temps:          0       0       0       0       0
  2328 ;;      Totals:         2       0       0       0       0
  2329 ;;Total ram usage:        2 bytes
  2330 ;; Hardware stack levels used:    1
  2331 ;; Hardware stack levels required when called:    3
  2332 ;; This function calls:
  2333 ;;		_TMR_ResetTimer2
  2334 ;;		_TMR_Timer2
  2335 ;; This function is called by:
  2336 ;;		_low_isr
  2337 ;; This function uses a non-reentrant model
  2338 ;;
  2339                           
  2340                           	psect	text24
  2341  00071C                     __ptext24:
  2342                           	opt stack 0
  2343  00071C                     _TMR_Timer2Start:
  2344                           	opt stack 22
  2345                           
  2346                           ;TIMERS.c: 165: TMR_Timer2(0);
  2347                           
  2348                           ;incstack = 0
  2349  00071C  0E00               	movlw	0
  2350  00071E  ECCB  F003         	call	_TMR_Timer2
  2351                           
  2352                           ;TIMERS.c: 166: Timer2Post = time;
  2353  000722  C003  F038         	movff	TMR_Timer2Start@time,_Timer2Post
  2354  000726  C004  F039         	movff	TMR_Timer2Start@time+1,_Timer2Post+1
  2355                           
  2356                           ;TIMERS.c: 167: TMR_ResetTimer2();
  2357  00072A  EC69  F003         	call	_TMR_ResetTimer2	;wreg free
  2358                           
  2359                           ;TIMERS.c: 168: TMR_Timer2(1);
  2360  00072E  0E01               	movlw	1
  2361  000730  ECCB  F003         	call	_TMR_Timer2
  2362  000734  0012               	return		;funcret
  2363  000736                     __end_of_TMR_Timer2Start:
  2364                           	opt stack 0
  2365                           pclatu	equ	0xFFB
  2366                           pclath	equ	0xFFA
  2367                           tblptru	equ	0xFF8
  2368                           tblptrh	equ	0xFF7
  2369                           tblptrl	equ	0xFF6
  2370                           tablat	equ	0xFF5
  2371                           prodh	equ	0xFF4
  2372                           prodl	equ	0xFF3
  2373                           intcon	equ	0xFF2
  2374                           intcon2	equ	0xFF1
  2375                           postinc0	equ	0xFEE
  2376                           fsr0h	equ	0xFEA
  2377                           fsr0l	equ	0xFE9
  2378                           wreg	equ	0xFE8
  2379                           fsr1h	equ	0xFE2
  2380                           fsr1l	equ	0xFE1
  2381                           bsr	equ	0xFE0
  2382                           fsr2h	equ	0xFDA
  2383                           fsr2l	equ	0xFD9
  2384                           status	equ	0xFD8
  2385                           
  2386 ;; *************** function _TMR_ResetTimer2 *****************
  2387 ;; Defined at:
  2388 ;;		line 74 in file "TIMERS.c"
  2389 ;; Parameters:    Size  Location     Type
  2390 ;;		None
  2391 ;; Auto vars:     Size  Location     Type
  2392 ;;  TimerOn         1    1[COMRAM] unsigned char 
  2393 ;; Return value:  Size  Location     Type
  2394 ;;		None               void
  2395 ;; Registers used:
  2396 ;;		wreg, status,2, cstack
  2397 ;; Tracked objects:
  2398 ;;		On entry : 0/0
  2399 ;;		On exit  : 0/0
  2400 ;;		Unchanged: 0/0
  2401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2402 ;;      Params:         0       0       0       0       0
  2403 ;;      Locals:         1       0       0       0       0
  2404 ;;      Temps:          0       0       0       0       0
  2405 ;;      Totals:         1       0       0       0       0
  2406 ;;Total ram usage:        1 bytes
  2407 ;; Hardware stack levels used:    1
  2408 ;; Hardware stack levels required when called:    2
  2409 ;; This function calls:
  2410 ;;		_TMR_Timer2
  2411 ;; This function is called by:
  2412 ;;		_TMR_Timer2Start
  2413 ;; This function uses a non-reentrant model
  2414 ;;
  2415                           
  2416                           	psect	text25
  2417  0006D2                     __ptext25:
  2418                           	opt stack 0
  2419  0006D2                     _TMR_ResetTimer2:
  2420                           	opt stack 22
  2421                           
  2422                           ;TIMERS.c: 76: unsigned char TimerOn = T2CONbits.TMR2ON;
  2423                           
  2424                           ;incstack = 0
  2425  0006D2  0E00               	movlw	0
  2426  0006D4  B4CA               	btfsc	4042,2,c	;volatile
  2427  0006D6  0E01               	movlw	1
  2428  0006D8  6E02               	movwf	TMR_ResetTimer2@TimerOn,c
  2429                           
  2430                           ;TIMERS.c: 78: TMR_Timer2(0);
  2431  0006DA  0E00               	movlw	0
  2432  0006DC  ECCB  F003         	call	_TMR_Timer2
  2433                           
  2434                           ;TIMERS.c: 79: Timer2PostCount = 0;
  2435  0006E0  0E00               	movlw	0
  2436  0006E2  6E3B               	movwf	_Timer2PostCount+1,c
  2437  0006E4  0E00               	movlw	0
  2438  0006E6  6E3A               	movwf	_Timer2PostCount,c
  2439                           
  2440                           ;TIMERS.c: 80: TMR2 = 0;
  2441  0006E8  0E00               	movlw	0
  2442  0006EA  6ECC               	movwf	4044,c	;volatile
  2443                           
  2444                           ;TIMERS.c: 81: if(TimerOn)
  2445  0006EC  5002               	movf	TMR_ResetTimer2@TimerOn,w,c
  2446  0006EE  B4D8               	btfsc	status,2,c
  2447  0006F0  0012               	return	
  2448                           
  2449                           ;TIMERS.c: 82: {
  2450                           ;TIMERS.c: 83: TMR_Timer2(1);
  2451  0006F2  0E01               	movlw	1
  2452  0006F4  ECCB  F003         	call	_TMR_Timer2
  2453  0006F8  0012               	return	
  2454  0006FA  0012               	return		;funcret
  2455  0006FC                     __end_of_TMR_ResetTimer2:
  2456                           	opt stack 0
  2457                           pclatu	equ	0xFFB
  2458                           pclath	equ	0xFFA
  2459                           tblptru	equ	0xFF8
  2460                           tblptrh	equ	0xFF7
  2461                           tblptrl	equ	0xFF6
  2462                           tablat	equ	0xFF5
  2463                           prodh	equ	0xFF4
  2464                           prodl	equ	0xFF3
  2465                           intcon	equ	0xFF2
  2466                           intcon2	equ	0xFF1
  2467                           postinc0	equ	0xFEE
  2468                           fsr0h	equ	0xFEA
  2469                           fsr0l	equ	0xFE9
  2470                           wreg	equ	0xFE8
  2471                           fsr1h	equ	0xFE2
  2472                           fsr1l	equ	0xFE1
  2473                           bsr	equ	0xFE0
  2474                           fsr2h	equ	0xFDA
  2475                           fsr2l	equ	0xFD9
  2476                           status	equ	0xFD8
  2477                           
  2478 ;; *************** function _TMR_Timer2 *****************
  2479 ;; Defined at:
  2480 ;;		line 55 in file "TIMERS.c"
  2481 ;; Parameters:    Size  Location     Type
  2482 ;;  state           1    wreg     unsigned char 
  2483 ;; Auto vars:     Size  Location     Type
  2484 ;;  state           1    0[COMRAM] unsigned char 
  2485 ;; Return value:  Size  Location     Type
  2486 ;;		None               void
  2487 ;; Registers used:
  2488 ;;		wreg, status,2
  2489 ;; Tracked objects:
  2490 ;;		On entry : 0/0
  2491 ;;		On exit  : 0/0
  2492 ;;		Unchanged: 0/0
  2493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2494 ;;      Params:         0       0       0       0       0
  2495 ;;      Locals:         1       0       0       0       0
  2496 ;;      Temps:          0       0       0       0       0
  2497 ;;      Totals:         1       0       0       0       0
  2498 ;;Total ram usage:        1 bytes
  2499 ;; Hardware stack levels used:    1
  2500 ;; Hardware stack levels required when called:    1
  2501 ;; This function calls:
  2502 ;;		Nothing
  2503 ;; This function is called by:
  2504 ;;		_low_isr
  2505 ;;		_TMR_ResetTimer2
  2506 ;;		_TMR_Timer2Start
  2507 ;; This function uses a non-reentrant model
  2508 ;;
  2509                           
  2510                           	psect	text26
  2511  000796                     __ptext26:
  2512                           	opt stack 0
  2513  000796                     _TMR_Timer2:
  2514                           	opt stack 23
  2515                           
  2516                           ;incstack = 0
  2517                           ;TMR_Timer2@state stored from wreg
  2518  000796  6E01               	movwf	TMR_Timer2@state,c
  2519                           
  2520                           ;TIMERS.c: 57: if(state)
  2521  000798  5001               	movf	TMR_Timer2@state,w,c
  2522  00079A  B4D8               	btfsc	status,2,c
  2523  00079C  D002               	goto	i1l582
  2524                           
  2525                           ;TIMERS.c: 58: {
  2526                           ;TIMERS.c: 60: T2CONbits.TMR2ON = 1;
  2527  00079E  84CA               	bsf	4042,2,c	;volatile
  2528                           
  2529                           ;TIMERS.c: 61: }
  2530  0007A0  0012               	return	
  2531  0007A2                     i1l582:
  2532                           
  2533                           ;TIMERS.c: 62: else
  2534                           ;TIMERS.c: 63: {
  2535                           ;TIMERS.c: 65: T2CONbits.TMR2ON = 0;
  2536  0007A2  94CA               	bcf	4042,2,c	;volatile
  2537  0007A4  0012               	return	
  2538  0007A6  0012               	return		;funcret
  2539  0007A8                     __end_of_TMR_Timer2:
  2540                           	opt stack 0
  2541                           pclatu	equ	0xFFB
  2542                           pclath	equ	0xFFA
  2543                           tblptru	equ	0xFF8
  2544                           tblptrh	equ	0xFF7
  2545                           tblptrl	equ	0xFF6
  2546                           tablat	equ	0xFF5
  2547                           prodh	equ	0xFF4
  2548                           prodl	equ	0xFF3
  2549                           intcon	equ	0xFF2
  2550                           intcon2	equ	0xFF1
  2551                           postinc0	equ	0xFEE
  2552                           fsr0h	equ	0xFEA
  2553                           fsr0l	equ	0xFE9
  2554                           wreg	equ	0xFE8
  2555                           fsr1h	equ	0xFE2
  2556                           fsr1l	equ	0xFE1
  2557                           bsr	equ	0xFE0
  2558                           fsr2h	equ	0xFDA
  2559                           fsr2l	equ	0xFD9
  2560                           status	equ	0xFD8
  2561                           
  2562 ;; *************** function _TMR_Timer2Free *****************
  2563 ;; Defined at:
  2564 ;;		line 121 in file "TIMERS.c"
  2565 ;; Parameters:    Size  Location     Type
  2566 ;;		None
  2567 ;; Auto vars:     Size  Location     Type
  2568 ;;		None
  2569 ;; Return value:  Size  Location     Type
  2570 ;;                  1    wreg      unsigned char 
  2571 ;; Registers used:
  2572 ;;		wreg, status,2
  2573 ;; Tracked objects:
  2574 ;;		On entry : 0/0
  2575 ;;		On exit  : 0/0
  2576 ;;		Unchanged: 0/0
  2577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2578 ;;      Params:         0       0       0       0       0
  2579 ;;      Locals:         0       0       0       0       0
  2580 ;;      Temps:          0       0       0       0       0
  2581 ;;      Totals:         0       0       0       0       0
  2582 ;;Total ram usage:        0 bytes
  2583 ;; Hardware stack levels used:    1
  2584 ;; Hardware stack levels required when called:    1
  2585 ;; This function calls:
  2586 ;;		Nothing
  2587 ;; This function is called by:
  2588 ;;		_low_isr
  2589 ;; This function uses a non-reentrant model
  2590 ;;
  2591                           
  2592                           	psect	text27
  2593  0007A8                     __ptext27:
  2594                           	opt stack 0
  2595  0007A8                     _TMR_Timer2Free:
  2596                           	opt stack 24
  2597                           
  2598                           ;TIMERS.c: 123: if(!Timer2Use)
  2599                           
  2600                           ;incstack = 0
  2601  0007A8  5043               	movf	_Timer2Use,w,c
  2602  0007AA  A4D8               	btfss	status,2,c
  2603  0007AC  D002               	goto	i1l1482
  2604                           
  2605                           ;TIMERS.c: 124: {
  2606                           ;TIMERS.c: 125: return 1;
  2607  0007AE  0E01               	movlw	1
  2608  0007B0  0012               	return	
  2609  0007B2                     i1l1482:
  2610                           
  2611                           ;TIMERS.c: 126: }
  2612                           ;TIMERS.c: 127: return 0;
  2613  0007B2  0E00               	movlw	0
  2614  0007B4  0012               	return	
  2615  0007B6  0012               	return		;funcret
  2616  0007B8                     __end_of_TMR_Timer2Free:
  2617                           	opt stack 0
  2618                           pclatu	equ	0xFFB
  2619                           pclath	equ	0xFFA
  2620                           tblptru	equ	0xFF8
  2621                           tblptrh	equ	0xFF7
  2622                           tblptrl	equ	0xFF6
  2623                           tablat	equ	0xFF5
  2624                           prodh	equ	0xFF4
  2625                           prodl	equ	0xFF3
  2626                           intcon	equ	0xFF2
  2627                           intcon2	equ	0xFF1
  2628                           postinc0	equ	0xFEE
  2629                           fsr0h	equ	0xFEA
  2630                           fsr0l	equ	0xFE9
  2631                           wreg	equ	0xFE8
  2632                           fsr1h	equ	0xFE2
  2633                           fsr1l	equ	0xFE1
  2634                           bsr	equ	0xFE0
  2635                           fsr2h	equ	0xFDA
  2636                           fsr2l	equ	0xFD9
  2637                           status	equ	0xFD8
  2638                           
  2639 ;; *************** function _IR_ReadReceiver *****************
  2640 ;; Defined at:
  2641 ;;		line 66 in file "IR.c"
  2642 ;; Parameters:    Size  Location     Type
  2643 ;;		None
  2644 ;; Auto vars:     Size  Location     Type
  2645 ;;  value           1    0[COMRAM] unsigned char 
  2646 ;; Return value:  Size  Location     Type
  2647 ;;                  1    wreg      unsigned char 
  2648 ;; Registers used:
  2649 ;;		None
  2650 ;; Tracked objects:
  2651 ;;		On entry : 0/0
  2652 ;;		On exit  : 0/0
  2653 ;;		Unchanged: 0/0
  2654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2655 ;;      Params:         0       0       0       0       0
  2656 ;;      Locals:         1       0       0       0       0
  2657 ;;      Temps:          0       0       0       0       0
  2658 ;;      Totals:         1       0       0       0       0
  2659 ;;Total ram usage:        1 bytes
  2660 ;; Hardware stack levels used:    1
  2661 ;; Hardware stack levels required when called:    1
  2662 ;; This function calls:
  2663 ;;		Nothing
  2664 ;; This function is called by:
  2665 ;;		_low_isr
  2666 ;; This function uses a non-reentrant model
  2667 ;;
  2668                           
  2669                           	psect	text28
  2670  0007C2                     __ptext28:
  2671                           	opt stack 0
  2672  0007C2                     _IR_ReadReceiver:
  2673                           	opt stack 24
  2674                           
  2675                           ;IR.c: 70: if(value & 0x10)
  2676                           
  2677                           ;incstack = 0
  2678  0007C2  CF81 F001          	movff	3969,IR_ReadReceiver@value	;volatile
  2679                           
  2680                           ;IR.c: 71: {
  2681                           ;IR.c: 72: return 1;
  2682                           ;	Return value of _IR_ReadReceiver is never used
  2683  0007C6  0012               	return	
  2684                           
  2685                           ;IR.c: 73: }
  2686                           ;IR.c: 74: return 0;
  2687                           ;	Return value of _IR_ReadReceiver is never used
  2688  0007C8  0012               	return		;funcret
  2689  0007CA                     __end_of_IR_ReadReceiver:
  2690                           	opt stack 0
  2691                           pclatu	equ	0xFFB
  2692                           pclath	equ	0xFFA
  2693                           tblptru	equ	0xFF8
  2694                           tblptrh	equ	0xFF7
  2695                           tblptrl	equ	0xFF6
  2696                           tablat	equ	0xFF5
  2697                           prodh	equ	0xFF4
  2698                           prodl	equ	0xFF3
  2699                           intcon	equ	0xFF2
  2700                           intcon2	equ	0xFF1
  2701                           postinc0	equ	0xFEE
  2702                           fsr0h	equ	0xFEA
  2703                           fsr0l	equ	0xFE9
  2704                           wreg	equ	0xFE8
  2705                           fsr1h	equ	0xFE2
  2706                           fsr1l	equ	0xFE1
  2707                           bsr	equ	0xFE0
  2708                           fsr2h	equ	0xFDA
  2709                           fsr2l	equ	0xFD9
  2710                           status	equ	0xFD8
  2711                           
  2712 ;; *************** function _high_isr *****************
  2713 ;; Defined at:
  2714 ;;		line 45 in file "INTERRUPTS.c"
  2715 ;; Parameters:    Size  Location     Type
  2716 ;;		None
  2717 ;; Auto vars:     Size  Location     Type
  2718 ;;		None
  2719 ;; Return value:  Size  Location     Type
  2720 ;;		None               void
  2721 ;; Registers used:
  2722 ;;		None
  2723 ;; Tracked objects:
  2724 ;;		On entry : 0/0
  2725 ;;		On exit  : 0/0
  2726 ;;		Unchanged: 0/0
  2727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2728 ;;      Params:         0       0       0       0       0
  2729 ;;      Locals:         0       0       0       0       0
  2730 ;;      Temps:         14       0       0       0       0
  2731 ;;      Totals:        14       0       0       0       0
  2732 ;;Total ram usage:       14 bytes
  2733 ;; Hardware stack levels used:    1
  2734 ;; This function calls:
  2735 ;;		Nothing
  2736 ;; This function is called by:
  2737 ;;		Interrupt level 2
  2738 ;; This function uses a non-reentrant model
  2739 ;;
  2740                           
  2741                           	psect	intcode
  2742  000008                     __pintcode:
  2743                           	opt stack 0
  2744  000008                     _high_isr:
  2745                           	opt stack 22
  2746                           
  2747                           ;incstack = 0
  2748  000008  CFFA F017          	movff	pclath,??_high_isr
  2749  00000C  CFFB F018          	movff	pclatu,??_high_isr+1
  2750  000010  CFE9 F019          	movff	fsr0l,??_high_isr+2
  2751  000014  EF22  F002         	goto	int_func
  2752                           pclatu	equ	0xFFB
  2753                           pclath	equ	0xFFA
  2754                           tblptru	equ	0xFF8
  2755                           tblptrh	equ	0xFF7
  2756                           tblptrl	equ	0xFF6
  2757                           tablat	equ	0xFF5
  2758                           prodh	equ	0xFF4
  2759                           prodl	equ	0xFF3
  2760                           intcon	equ	0xFF2
  2761                           intcon2	equ	0xFF1
  2762                           postinc0	equ	0xFEE
  2763                           fsr0h	equ	0xFEA
  2764                           fsr0l	equ	0xFE9
  2765                           wreg	equ	0xFE8
  2766                           fsr1h	equ	0xFE2
  2767                           fsr1l	equ	0xFE1
  2768                           bsr	equ	0xFE0
  2769                           fsr2h	equ	0xFDA
  2770                           fsr2l	equ	0xFD9
  2771                           status	equ	0xFD8
  2772                           
  2773                           	psect	intcode_body
  2774  000444                     __pintcode_body:
  2775                           	opt stack 22
  2776  000444                     int_func:
  2777                           	opt stack 22
  2778  000444  CFEA F01A          	movff	fsr0h,??_high_isr+3
  2779  000448  CFE1 F01B          	movff	fsr1l,??_high_isr+4
  2780  00044C  CFE2 F01C          	movff	fsr1h,??_high_isr+5
  2781  000450  CFD9 F01D          	movff	fsr2l,??_high_isr+6
  2782  000454  CFDA F01E          	movff	fsr2h,??_high_isr+7
  2783  000458  CFF3 F01F          	movff	prodl,??_high_isr+8
  2784  00045C  CFF4 F020          	movff	prodh,??_high_isr+9
  2785  000460  CFF6 F021          	movff	tblptrl,??_high_isr+10
  2786  000464  CFF7 F022          	movff	tblptrh,??_high_isr+11
  2787  000468  CFF8 F023          	movff	tblptru,??_high_isr+12
  2788  00046C  CFF5 F024          	movff	tablat,??_high_isr+13
  2789  000470  C024  FFF5         	movff	??_high_isr+13,tablat
  2790  000474  C023  FFF8         	movff	??_high_isr+12,tblptru
  2791  000478  C022  FFF7         	movff	??_high_isr+11,tblptrh
  2792  00047C  C021  FFF6         	movff	??_high_isr+10,tblptrl
  2793  000480  C020  FFF4         	movff	??_high_isr+9,prodh
  2794  000484  C01F  FFF3         	movff	??_high_isr+8,prodl
  2795  000488  C01E  FFDA         	movff	??_high_isr+7,fsr2h
  2796  00048C  C01D  FFD9         	movff	??_high_isr+6,fsr2l
  2797  000490  C01C  FFE2         	movff	??_high_isr+5,fsr1h
  2798  000494  C01B  FFE1         	movff	??_high_isr+4,fsr1l
  2799  000498  C01A  FFEA         	movff	??_high_isr+3,fsr0h
  2800  00049C  C019  FFE9         	movff	??_high_isr+2,fsr0l
  2801  0004A0  C018  FFFB         	movff	??_high_isr+1,pclatu
  2802  0004A4  C017  FFFA         	movff	??_high_isr,pclath
  2803  0004A8  0011               	retfie		f
  2804  0004AA                     __end_of_high_isr:
  2805                           	opt stack 0
  2806                           pclatu	equ	0xFFB
  2807                           pclath	equ	0xFFA
  2808                           tblptru	equ	0xFF8
  2809                           tblptrh	equ	0xFF7
  2810                           tblptrl	equ	0xFF6
  2811                           tablat	equ	0xFF5
  2812                           prodh	equ	0xFF4
  2813                           prodl	equ	0xFF3
  2814                           intcon	equ	0xFF2
  2815                           intcon2	equ	0xFF1
  2816                           postinc0	equ	0xFEE
  2817                           fsr0h	equ	0xFEA
  2818                           fsr0l	equ	0xFE9
  2819                           wreg	equ	0xFE8
  2820                           fsr1h	equ	0xFE2
  2821                           fsr1l	equ	0xFE1
  2822                           bsr	equ	0xFE0
  2823                           fsr2h	equ	0xFDA
  2824                           fsr2l	equ	0xFD9
  2825                           status	equ	0xFD8
  2826                           pclatu	equ	0xFFB
  2827                           pclath	equ	0xFFA
  2828                           tblptru	equ	0xFF8
  2829                           tblptrh	equ	0xFF7
  2830                           tblptrl	equ	0xFF6
  2831                           tablat	equ	0xFF5
  2832                           prodh	equ	0xFF4
  2833                           prodl	equ	0xFF3
  2834                           intcon	equ	0xFF2
  2835                           intcon2	equ	0xFF1
  2836                           postinc0	equ	0xFEE
  2837                           fsr0h	equ	0xFEA
  2838                           fsr0l	equ	0xFE9
  2839                           wreg	equ	0xFE8
  2840                           fsr1h	equ	0xFE2
  2841                           fsr1l	equ	0xFE1
  2842                           bsr	equ	0xFE0
  2843                           fsr2h	equ	0xFDA
  2844                           fsr2l	equ	0xFD9
  2845                           status	equ	0xFD8
  2846                           
  2847                           	psect	rparam
  2848  0000                     pclatu	equ	0xFFB
  2849                           pclath	equ	0xFFA
  2850                           tblptru	equ	0xFF8
  2851                           tblptrh	equ	0xFF7
  2852                           tblptrl	equ	0xFF6
  2853                           tablat	equ	0xFF5
  2854                           prodh	equ	0xFF4
  2855                           prodl	equ	0xFF3
  2856                           intcon	equ	0xFF2
  2857                           intcon2	equ	0xFF1
  2858                           postinc0	equ	0xFEE
  2859                           fsr0h	equ	0xFEA
  2860                           fsr0l	equ	0xFE9
  2861                           wreg	equ	0xFE8
  2862                           fsr1h	equ	0xFE2
  2863                           fsr1l	equ	0xFE1
  2864                           bsr	equ	0xFE0
  2865                           fsr2h	equ	0xFDA
  2866                           fsr2l	equ	0xFD9
  2867                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    66
    Data        2
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     55      69
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_MSC_BlinkLED
    _MTR_Rotate->_MSC_DelayMS
    _MSC_BlinkLED->_MSC_DelayMS
    _MSC_DelayMS->_MSC_DelayNOP
    _Init_System->_BUT_ReadButton
    _InitTimer2->_TMR_Timer2Int
    _InitButton->_BUT_IR_PinChangeInt

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _low_isr in COMRAM

    _low_isr->_TMR_Timer2Start
    _TMR_Timer2Start->_TMR_ResetTimer2
    _TMR_ResetTimer2->_TMR_Timer2

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     782
                           _Init_App
                        _Init_System
                       _MSC_BlinkLED
                         _MTR_Rotate
            _SYS_ConfigureOscillator
 ---------------------------------------------------------------------------------
 (1) _SYS_ConfigureOscillator                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MTR_Rotate                                           0     0      0     334
                        _MSC_DelayMS
                            _MTR_IN1
                            _MTR_IN2
 ---------------------------------------------------------------------------------
 (2) _MTR_IN2                                              1     1      0      15
                                             36 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MTR_IN1                                              1     1      0      15
                                             36 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _MSC_BlinkLED                                         6     4      2     403
                                             49 COMRAM     6     4      2
                        _MSC_DelayMS
 ---------------------------------------------------------------------------------
 (2) _MSC_DelayMS                                          9     5      4     304
                                             40 COMRAM     9     5      4
                       _MSC_DelayNOP
 ---------------------------------------------------------------------------------
 (3) _MSC_DelayNOP                                         4     2      2      99
                                             36 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _Init_System                                          0     0      0      45
                     _BUT_ReadButton
                            _InitADC
                         _InitButton
                          _InitFlash
                             _InitIR
                            _InitLDO
                          _InitMOTOR
                             _InitRF
                         _InitTimers
 ---------------------------------------------------------------------------------
 (2) _InitTimers                                           0     0      0      15
                         _InitTimer2
 ---------------------------------------------------------------------------------
 (3) _InitTimer2                                           0     0      0      15
                      _TMR_Timer2Int
 ---------------------------------------------------------------------------------
 (4) _TMR_Timer2Int                                        1     1      0      15
                                             36 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _InitRF                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitMOTOR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitLDO                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitIR                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitFlash                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitButton                                           0     0      0      15
                _BUT_IR_PinChangeInt
 ---------------------------------------------------------------------------------
 (3) _BUT_IR_PinChangeInt                                  1     1      0      15
                                             36 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _InitADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BUT_ReadButton                                       1     1      0      15
                                             36 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Init_App                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _low_isr                                             18    18      0     188
                                              4 COMRAM    18    18      0
                    _IR_ReadReceiver
                         _TMR_Timer2
                     _TMR_Timer2Free
                    _TMR_Timer2Start
                   i1_BUT_ReadButton
 ---------------------------------------------------------------------------------
 (6) i1_BUT_ReadButton                                     1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _TMR_Timer2Start                                      2     0      2     120
                                              2 COMRAM     2     0      2
                    _TMR_ResetTimer2
                         _TMR_Timer2
 ---------------------------------------------------------------------------------
 (7) _TMR_ResetTimer2                                      1     1      0      30
                                              1 COMRAM     1     1      0
                         _TMR_Timer2
 ---------------------------------------------------------------------------------
 (7) _TMR_Timer2                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _TMR_Timer2Free                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _IR_ReadReceiver                                      1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _high_isr                                            14    14      0       0
                                             22 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init_App
   _Init_System
     _BUT_ReadButton
     _InitADC
     _InitButton
       _BUT_IR_PinChangeInt
     _InitFlash
     _InitIR
     _InitLDO
     _InitMOTOR
     _InitRF
     _InitTimers
       _InitTimer2
         _TMR_Timer2Int
   _MSC_BlinkLED
     _MSC_DelayMS
       _MSC_DelayNOP
   _MTR_Rotate
     _MSC_DelayMS
       _MSC_DelayNOP
     _MTR_IN1
     _MTR_IN2
   _SYS_ConfigureOscillator

 _low_isr (ROOT)
   _IR_ReadReceiver
   _TMR_Timer2
   _TMR_Timer2Free
   _TMR_Timer2Start
     _TMR_ResetTimer2
       _TMR_Timer2
     _TMR_Timer2
   i1_BUT_ReadButton

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     37      45       1       54.3%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      45      11        0.0%
DATA                 0      0      45      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Aug 25 18:52:44 2015

         __end_of_IR_ReadReceiver 07CA                       __CFG_CP0$ON 000000  
                              bsr 000FE0                        _TMR_Timer2 0796  
                             l194 0706                               l550 0790  
                             l561 069A                               l559 0688  
                             l594 077E                               _PR2 000FCB  
              TMR_Timer2Int@state 0025                               wreg 000FE8  
                            l1326 0690                              l1352 075A  
                            l1346 076C                              l2432 070E  
                            l2440 0534                              l2450 05BE  
                            l2436 051A                              l2444 05A0  
                            l2462 04FA                              l2480 056E  
                            l2458 04D4                              l2486 0580  
                            _LATA 000F89                              _LATB 000F8A  
                            _LATC 000F8B                              i1l70 00E2  
                            i1l63 00AC                              i1l72 00D4  
                            i1l66 007C                              i1l76 00E6  
                            _TMR2 000FCC            __size_of_TMR_Timer2Int 0012  
                 __end_of_MTR_IN1 0772                   __end_of_MTR_IN2 0760  
                            _main 0552                              fsr0h 000FEA  
                            fsr1h 000FE2                              fsr0l 000FE9  
                            fsr2h 000FDA                              fsr1l 000FE1  
                            fsr2l 000FD9                              pclat 000FFA  
                            prodh 000FF4                              prodl 000FF3  
                            start 012C                     __CFG_IESO$OFF 000000  
                   __CFG_FOSC2$ON 000000                      ___param_bank 000010  
                 __end_of_InitADC 07E4                   __end_of_InitLDO 07DE  
                   ??_Init_System 0026                             ?_main 0001  
                           i1l561 06C8                             i1l582 07A2  
                           i1l559 06B6                             _PORTB 000F81  
         __size_of_TMR_Timer2Free 0010               BUT_ReadButton@value 0025  
                  __CFG_FCMEN$OFF 000000                             _errno 003C  
                 __end_of_low_isr 012C                             tablat 000FF5  
                           status 000FD8                       ?_MTR_Rotate 0001  
                      _InitButton 07B8                   __initialization 0616  
                      _InitTimer2 0736                        _InitTimers 07CA  
                    __end_of_main 0596                  ?_IR_ReadReceiver 0001  
                _ButtonValue_prev 0045                  __end_of_Init_App 0616  
                   _TMR_Timer2Int 0772                       ?_TMR_Timer2 0001  
                    ?_MSC_DelayMS 0029                            ??_main 0038  
                   __activetblptr 000001               TMR_Timer2Start@time 0003  
             __end_of_Init_System 0676                         ??_MTR_IN1 0025  
                       ??_MTR_IN2 0025          __size_of_TMR_ResetTimer2 002A  
              __size_of_InitMOTOR 0004                            i1l1560 06BE  
                          i1l2512 009C                            i1l1482 07B2  
                          i1l2514 00A2                            i1l2516 00A8  
                          i1l2526 00D8                            i1l2528 00DE  
                  __CFG_WDTEN$OFF 000000                __size_of_InitFlash 0002  
                       ??_InitADC 0025                         ??_InitLDO 0025  
                          _InitIR 07DE                            _InitRF 07DA  
        __size_of_TMR_Timer2Start 001A                    __CFG_XINST$OFF 000000  
                      _Timer2Post 0038                  __end_of_high_isr 04AA  
               ?i1_BUT_ReadButton 0001           __size_of_BUT_ReadButton 002E  
                  __CFG_STVREN$ON 000000      __size_of_BUT_IR_PinChangeInt 0012  
                  ?_TMR_Timer2Int 0001                ??i1_BUT_ReadButton 0001  
                          clear_0 061C                      __pdataCOMRAM 0044  
             __size_of_MTR_Rotate 005E                      __mediumconst 0000  
                       ??_low_isr 0005                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                 __CFG_FOSC$HSPLL 000000                  __end_ofexp@coeff 0428  
                __end_oflog@coeff 0443                        __accesstop 0080  
         __end_of__initialization 063A                   TMR_Timer2@state 0001  
             __size_of_TMR_Timer2 0012                     ___rparam_used 000001  
                     ?_InitButton 0001                    __pcstackCOMRAM 0001  
                     ?_InitTimer2 0001                       ?_InitTimers 0001  
            IR_ReadReceiver@value 0001                       _Init_System 0648  
               __end_of_InitMOTOR 07D8                       _Button_Data 003F  
               __end_of_InitFlash 07E2                       _ButtonTimer 0044  
        ?_SYS_ConfigureOscillator 0001                    _TMR_Timer2Free 07A8  
                   ?_MSC_DelayNOP 0025                     ?_MSC_BlinkLED 0032  
                       ?_Init_App 0001                 ??_TMR_ResetTimer2 0002  
                         ?_InitIR 0001                           ?_InitRF 0001  
                 ??_TMR_Timer2Int 0025                 ??_TMR_Timer2Start 0005  
          __end_of_TMR_Timer2Free 07B8              __size_of_MSC_DelayMS 004A  
                   MSC_DelayMS@US 0029                     MSC_DelayNOP@i 0027  
                  ??_MSC_DelayNOP 0027                           _IR_Data 0041  
             __size_of_InitButton 000A                    ??_MSC_BlinkLED 0034  
                         _MTR_IN1 0760                           _MTR_IN2 074E  
                         _RF_Data 0042               __size_of_InitTimer2 0018  
                   MSC_BlinkLED@i 0036               __size_of_InitTimers 0006  
                       ?_high_isr 0001                        ??_Init_App 0025  
                 _Timer2PostCount 003A                           _InitADC 07E2  
                    ??_MTR_Rotate 0032                           _InitLDO 07DC  
                         __Hparam 0000                   __size_of_InitIR 0002  
                 __size_of_InitRF 0002                           __Lparam 0000  
                  _BUT_ReadButton 0676                      __psmallconst 0400  
 __end_of_SYS_ConfigureOscillator 07D4                           __pcinit 0616  
                         __ramtop 0400                      ??_TMR_Timer2 0001  
                 ?_TMR_Timer2Free 0001                           __ptext0 0552  
                         __ptext1 07D0                           __ptext2 04AA  
                         __ptext3 074E                           __ptext4 0760  
                         __ptext5 0596                           __ptext6 0508  
                         __ptext7 06FC                           __ptext8 0648  
                         __ptext9 07CA                         _T2CONbits 000FCA  
              __end_of_MTR_Rotate 0508                           _low_isr 0018  
        BUT_IR_PinChangeInt@state 0025                        ??_high_isr 0017  
                  __pintcode_body 0444               _BUT_IR_PinChangeInt 0784  
            end_of_initialization 063A                           int_func 0444  
              __end_of_TMR_Timer2 07A8            __end_of_BUT_ReadButton 06A4  
                         postinc0 000FEE              ?_BUT_IR_PinChangeInt 0001  
        __size_of_IR_ReadReceiver 0008                         _TRISAbits 000F92  
                       _TRISBbits 000F93                         _TRISCbits 000F94  
       __size_ofi1_BUT_ReadButton 002E                   ?_BUT_ReadButton 0001  
                    ??_InitButton 0026                      ??_InitTimer2 0026  
                  __end_of_InitIR 07E0                    __end_of_InitRF 07DC  
                    ??_InitTimers 0026              __end_of_MSC_DelayNOP 071C  
           ??_BUT_IR_PinChangeInt 0025              __end_of_MSC_BlinkLED 05DA  
                    ?_Init_System 0001                     __pidataCOMRAM 07D8  
                       _InitMOTOR 07D4                      _ButtonChange 003E  
           i1BUT_ReadButton@value 0001               start_initialization 0616  
                       _InitFlash 07E0                   _TMR_ResetTimer2 06D2  
              __end_of_InitButton 07C2                __end_of_InitTimer2 074E  
              __end_of_InitTimers 07D0  __size_of_SYS_ConfigureOscillator 0004  
                 _TMR_Timer2Start 071C                 __size_of_Init_App 003C  
                        ??_InitIR 0025                          ??_InitRF 0025  
                       _Timer2Use 0043            TMR_ResetTimer2@TimerOn 0002  
                      ?_InitMOTOR 0001                       __pbssCOMRAM 0038  
                      ?_InitFlash 0001                          ?_MTR_IN1 0001  
                        ?_MTR_IN2 0001                 ??_IR_ReadReceiver 0001  
             __CFG_CCP2MX$DEFAULT 000000                 __size_of_high_isr 04A2  
                        ?_InitADC 0001                          ?_InitLDO 0001  
                       __pintcode 0008                  ??_TMR_Timer2Free 0001  
           __end_of_TMR_Timer2Int 0784                       __pintcodelo 0018  
                    MSC_DelayMS@i 002E                     ??_MSC_DelayMS 002D  
         __end_of_TMR_ResetTimer2 06FC                       __smallconst 0400  
                        ?_low_isr 0001                  i1_BUT_ReadButton 06A4  
             __end_of_PCB_Version 040A           __end_of_TMR_Timer2Start 0736  
                        _DC_Motor 0040             __size_of_MSC_DelayNOP 0020  
                        _IPR1bits 000F9F                          _PIE1bits 000F9D  
           __size_of_MSC_BlinkLED 0044                          _PIR1bits 000F9E  
                        _RCONbits 000FD0                  __CFG_WDTPS$32768 000000  
                      _ADCON1bits 000FC1              __size_of_Init_System 002E  
                     ??_InitMOTOR 0025                       ??_InitFlash 0025  
             __end_of_MSC_DelayMS 0552                      _MSC_DelayNOP 06FC  
                     _INTCON2bits 000FF1                  __size_of_MTR_IN1 0012  
                __size_of_MTR_IN2 0012                      _MSC_BlinkLED 0596  
         _SYS_ConfigureOscillator 07D0                  ??_BUT_ReadButton 0025  
                        _Init_App 05DA                  __size_of_InitADC 0002  
                __size_of_InitLDO 0002                          __Hrparam 0000  
                        __Lrparam 0000                      __Lsmallconst 0400  
                     _PCB_Version 0401                  ?_TMR_ResetTimer2 0001  
             low_isr@button_state 0016                  __size_of_low_isr 0114  
                        __ptext10 0736                          __ptext11 0772  
                        __ptext20 0676                          __ptext12 07DA  
                        __ptext21 05DA                          __ptext13 07D4  
                        __ptext14 07DC                          __ptext23 06A4  
                        __ptext15 07DE                          __ptext24 071C  
                        __ptext16 07E0                          __ptext25 06D2  
                        __ptext17 07B8                          __ptext26 0796  
                        __ptext18 0784                          __ptext27 07A8  
                        __ptext19 07E2                          __ptext28 07C2  
                        _high_isr 0008                  ?_TMR_Timer2Start 0003  
                   __size_of_main 0044       __end_of_BUT_IR_PinChangeInt 0796  
                    MTR_IN1@state 0025                      MTR_IN2@state 0025  
                 _IR_ReadReceiver 07C2                       _MSC_DelayMS 0508  
                        exp@coeff 040A                          log@coeff 0428  
                      _INTCONbits 000FF2         ??_SYS_ConfigureOscillator 0025  
                MSC_DelayNOP@NOPs 0025                          intlevel1 0000  
                        intlevel2 0000          __end_ofi1_BUT_ReadButton 06D2  
               MSC_BlinkLED@blink 0032                        _MTR_Rotate 04AA  
